(undo-tree-save-format-version . 1)
"52da6eca78a95043b6100aa4908c20b08dde678c"
[nil nil nil nil (25218 41661 89980 300000) 0 nil]
([nil nil ((2412 . 2429) (t 25200 8902 0 0)) nil (25218 41661 89978 700000) 0 nil])
([nil nil ((#("t" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2428) (undo-tree-id433 . -1) (undo-tree-id434 . -1) 2429) nil (25218 41661 89977 100000) 0 nil])
([nil nil ((2428 . 2431)) nil (25218 41661 89973 900000) 0 nil])
([nil nil ((#("i" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2418) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (#("s" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2419) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (#(" " 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2420) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (#("i" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2421) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (#("m" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2422) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (#("p" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2423) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (#("o" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2424) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (#("r" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2425) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (#("t" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2426) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (#("a" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2427) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (#("n" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2428) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (#("t" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2429) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (#(" " 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2430) (undo-tree-id431 . -1) (undo-tree-id432 . -1) 2431) nil (25218 41661 89950 500000) 0 nil])
([nil nil ((2418 . 2421)) nil (25218 41661 88822 500000) 0 nil])
([nil nil ((2421 . 2437)) nil (25218 41661 88821 400000) 0 nil])
([nil nil ((#("s" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2435) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (#(" " 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2436) (undo-tree-id229 . -1) (undo-tree-id230 . -1) 2437) nil (25218 41661 88819 700000) 0 nil])
([nil nil ((2435 . 2456)) nil (25218 41661 88812 600000) 0 nil])
([nil nil ((2456 . 2463)) nil (25218 41661 88811 500000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2462) (undo-tree-id223 . -1) (undo-tree-id224 . -1) 2463) nil (25218 41661 88810 200000) 0 nil])
([nil nil ((2462 . 2483)) nil (25218 41661 88807 0) 0 nil])
([nil nil ((2483 . 2495)) nil (25218 41661 88805 400000) 0 nil])
([nil nil ((#("e" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2492) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (#("i" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2493) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (#("e" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2494) (undo-tree-id221 . -1) (undo-tree-id222 . -1) 2495) nil (25218 41661 88801 200000) 0 nil])
([nil nil ((2492 . 2498)) nil (25218 41661 87954 300000) 0 nil])
([nil nil ((2532 . 2540)) nil (25218 41661 87953 0) 0 nil])
([nil nil ((#("t" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2539) (undo-tree-id209 . -1) (undo-tree-id210 . -1) 2540) nil (25218 41661 87951 600000) 0 nil])
([nil nil ((2539 . 2553)) nil (25218 41661 87948 800000) 0 nil])
([nil nil ((2553 . 2560)) nil (25218 41661 87947 900000) 0 nil])
([nil nil ((#("t" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2558) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (#("i" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2559) (undo-tree-id207 . -1) (undo-tree-id208 . -1) 2560) nil (25218 41661 87946 100000) 0 nil])
([nil nil ((2558 . 2567)) nil (25218 41661 87939 300000) 0 nil])
([nil nil ((#("f" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2566) (undo-tree-id201 . -1) (undo-tree-id202 . -1) 2567) nil (25218 41661 87938 0) 0 nil])
([nil nil ((2566 . 2570)) nil (25218 41661 87935 100000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2569) (undo-tree-id199 . -1) (undo-tree-id200 . -1) 2570) nil (25218 41661 87933 800000) 0 nil])
([nil nil ((2569 . 2570)) nil (25218 41661 87931 0) 0 nil])
([nil nil ((#("e" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2569) (undo-tree-id197 . -1) (undo-tree-id198 . -1) 2570) nil (25218 41661 87929 700000) 0 nil])
([nil nil ((2569 . 2581)) nil (25218 41661 87926 800000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2580) (undo-tree-id195 . -1) (undo-tree-id196 . -1) 2581) nil (25218 41661 87925 400000) 0 nil])
([nil nil ((2580 . 2595)) nil (25218 41661 87922 500000) 0 nil])
([nil nil ((#("i" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2592) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (#("l" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2593) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (#("d" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2594) (undo-tree-id193 . -1) (undo-tree-id194 . -1) 2595) nil (25218 41661 87920 400000) 0 nil])
([nil nil ((2592 . 2594)) nil (25218 41661 87908 700000) 0 nil])
([nil nil ((2594 . 2602)) nil (25218 41661 87907 700000) 0 nil])
([nil nil ((#("t" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2601) (undo-tree-id181 . -1) (undo-tree-id182 . -1) 2602) nil (25218 41661 87906 400000) 0 nil])
([nil nil ((2601 . 2622)) nil (25218 41661 87903 600000) 0 nil])
([nil nil ((2622 . 2629)) nil (25218 41661 87902 700000) 0 nil])
([nil nil ((#("d" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2627) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (#("t" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2628) (undo-tree-id179 . -1) (undo-tree-id180 . -1) 2629) nil (25218 41661 87901 0) 0 nil])
([nil nil ((2627 . 2639)) nil (25218 41661 87894 600000) 0 nil])
([nil nil ((2639 . 2652)) nil (25218 41661 87893 500000) 0 nil])
([nil nil ((2652 . 2667)) nil (25218 41661 87892 200000) 0 nil])
([nil nil ((#("o" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2662) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . 1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (#("t" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2663) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#(" " 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2664) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (#("c" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2665) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (#("o" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2666) (undo-tree-id173 . -1) (undo-tree-id174 . -1) 2667) nil (25218 41661 87886 800000) 0 nil])
([nil nil ((2662 . 2681)) nil (25218 41661 87387 600000) 0 nil])
([nil nil ((2668 . 2669)) nil (25218 41661 87386 800000) 0 nil])
([nil nil ((2682 . 2684)) nil (25218 41661 87385 800000) 0 nil])
([nil nil ((2684 . 2705)) nil (25218 41661 87384 800000) 0 nil])
([nil nil ((2705 . 2723)) nil (25218 41661 87383 600000) 0 nil])
([nil nil ((#("t" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2686) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (#("h" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2687) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#("i" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2688) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (#("n" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2689) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (#("g" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2690) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (#("s" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2691) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) 2692) nil (25218 41661 87379 200000) 0 nil])
([nil nil ((2686 . 2691)) nil (25218 41661 87303 600000) 0 nil])
([nil nil ((#("e" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2720) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (#("i" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2721) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) 2722) nil (25218 41661 87301 600000) 0 nil])
([nil nil ((2720 . 2739)) nil (25218 41661 87291 100000) 0 nil])
([nil nil ((#("r" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2738) (undo-tree-id82 . -1) (undo-tree-id83 . -1) 2739) nil (25218 41661 87290 0) 0 nil])
([nil nil ((#("a" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2732) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#("l" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2733) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("l" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2734) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#(" " 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2735) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#("c" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2736) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#("a" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2737) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) 2738) nil (25218 41661 87283 700000) 0 nil])
([nil nil ((2732 . 2734)) nil (25218 41661 87234 300000) 0 nil])
([nil nil ((#("c" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2733) (undo-tree-id23 . -1) (undo-tree-id24 . -1) 2734) nil (25218 41661 87233 100000) 0 nil])
([nil nil ((2733 . 2749)) nil (25218 41661 87230 200000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2748) (undo-tree-id21 . -1) (undo-tree-id22 . -1) 2749) nil (25218 41661 87228 900000) 0 nil])
([nil nil ((2748 . 2752)) nil (25218 41661 87225 700000) 0 nil])
([nil nil ((#("p" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2748) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#("o" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2749) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("u" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2750) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("t" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2751) (undo-tree-id19 . -1) (undo-tree-id20 . -1) 2752) nil (25218 41661 87223 0) 0 nil])
([nil nil ((2748 . 2764)) nil (25218 41661 87205 0) 0 nil])
([nil nil ((#("g" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -2763) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 2764) nil (25218 41661 87202 900000) 0 nil])
([nil nil ((2763 . 2782)) nil (25218 41661 87187 800000) 0 nil])
([nil nil ((2782 . 2786)) nil (25218 41661 87185 600000) 0 nil])
([nil nil ((2834 . 2838)) nil (25218 41661 87180 700000) 0 nil])
([nil nil ((1488 . 1492) (t 25218 41662 543273 900000)) nil (25218 56718 319217 0) 0 nil])
([nil nil ((#("c" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -1488) (undo-tree-id435 . -1) (#("c" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -1489) (undo-tree-id436 . -1) (#("d" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -1490) (undo-tree-id437 . -1) (#("r" 0 1 (wrap-prefix #("   " 0 3 (face org-indent)) line-prefix "" fontified t)) . -1491) (undo-tree-id438 . -1) 1492) nil (25218 56718 319214 600000) 0 nil])
([nil nil ((#(":ID: 17275a2c-2f09-4136-9dbf-12915358c307" 0 1 (wrap-prefix "" line-prefix "" fontified nil) 1 3 (wrap-prefix "" line-prefix "" fontified nil) 3 4 (wrap-prefix "" line-prefix "" fontified nil) 4 5 (wrap-prefix "" line-prefix "" fontified nil) 5 41 (wrap-prefix "" line-prefix "" fontified nil)) . -14) (14 . 102) (14 . 15) (1 . 20) 1488) nil (25218 56718 319198 100000) 0 nil])
([nil nil ((#(":PROPERTIES:
:ID:       17275a2c-2f09-4136-9dbf-12915358c307
:END:
" 0 12 (fontified t face org-drawer font-lock-fontified t line-prefix "" wrap-prefix "") 12 13 (fontified t line-prefix "" wrap-prefix "") 13 17 (fontified t face org-special-keyword line-prefix "" wrap-prefix "") 17 24 (fontified t line-prefix "" wrap-prefix "") 24 60 (fontified t face org-property-value line-prefix "" wrap-prefix "") 60 61 (fontified t line-prefix "" wrap-prefix "") 61 66 (fontified t face org-drawer font-lock-fontified t line-prefix "" wrap-prefix "") 66 67 (fontified t line-prefix "" wrap-prefix "")) . -1) (undo-tree-id212 . -67) (undo-tree-id213 . -67) 68 (t 25218 56719 752375 600000)) nil (25245 36241 894712 900000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -2829) (#("   " 0 3 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -2780) (#("   " 0 3 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -2499)) nil (25245 36241 894708 400000) 0 nil])
([nil nil ((2828 . 2832)) nil (25245 36241 894706 700000) 0 nil])
([nil nil ((2832 . 2853)) nil (25245 36241 894705 300000) 0 nil])
([nil nil ((2853 . 2861)) nil (25245 36241 894704 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -2860) (undo-tree-id210 . -1) (undo-tree-id211 . -1) 2861) nil (25245 36241 894702 500000) 0 nil])
([nil nil ((2860 . 2866)) nil (25245 36241 894697 400000) 0 nil])
([nil nil ((2866 . 2867)) nil (25245 36241 894696 200000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -2866) (undo-tree-id208 . -1) (undo-tree-id209 . -1) 2867) nil (25245 36241 894694 600000) 0 nil])
([nil nil ((2866 . 2884)) nil (25245 36241 894691 200000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -2882) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (#("d" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -2883) (undo-tree-id206 . -1) (undo-tree-id207 . -1) 2884) nil (25245 36241 894689 0) 0 nil])
([nil nil ((2882 . 2899)) nil (25245 36241 894681 200000) 0 nil])
([nil nil ((2899 . 2909)) nil (25245 36241 894679 900000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -2908) (undo-tree-id200 . -1) (undo-tree-id201 . -1) 2909) nil (25245 36241 894678 200000) 0 nil])
([nil nil ((2908 . 2909)) nil (25245 36241 894674 600000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -2908) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) 2909) nil (25245 36241 894672 700000) 0 nil])
([nil nil ((2908 . 2910)) nil (25245 36241 894668 100000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -2908) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (#("p" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -2909) (undo-tree-id195 . -1) (undo-tree-id196 . -1) 2910) nil (25245 36241 894665 800000) 0 nil])
([nil nil ((2908 . 2919)) nil (25245 36241 894655 0) 0 nil])
([nil nil ((2919 . 2940)) nil (25245 36241 894653 700000) 0 nil])
([nil nil ((2940 . 2957)) nil (25245 36241 894652 400000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -2954) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (#("i" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -2955) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (#("m" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -2956) (undo-tree-id188 . -1) (undo-tree-id189 . -1) 2957) nil (25245 36241 894649 600000) 0 nil])
([nil nil ((2954 . 2967)) nil (25245 36241 894635 600000) 0 nil])
([nil nil ((2967 . 2971)) nil (25245 36241 894634 100000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -2968) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (#("u" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -2969) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (#("c" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -2970) (undo-tree-id176 . -1) (undo-tree-id177 . -1) 2971) nil (25245 36241 894631 400000) 0 nil])
([nil nil ((2968 . 2970)) nil (25245 36241 894489 700000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -2968) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (#("u" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -2969) (undo-tree-id165 . -1) (undo-tree-id166 . -1) 2970) nil (25245 36241 894487 300000) 0 nil])
([nil nil ((2968 . 2974)) nil (25245 36241 894479 500000) 0 nil])
([nil nil ((3010 . 3014)) nil (25245 36241 894478 400000) 0 nil])
([nil nil ((3014 . 3035)) nil (25245 36241 894476 900000) 0 nil])
([nil nil ((3035 . 3055)) nil (25245 36241 894475 200000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3054) (undo-tree-id159 . -1) (undo-tree-id160 . -1) 3055) nil (25245 36241 894473 500000) 0 nil])
([nil nil ((3054 . 3061)) nil (25245 36241 894470 100000) 0 nil])
([nil nil ((3061 . 3064)) nil (25245 36241 894468 700000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3063) (undo-tree-id157 . -1) (undo-tree-id158 . -1) 3064) nil (25245 36241 894467 0) 0 nil])
([nil nil ((3063 . 3084)) nil (25245 36241 894463 300000) 0 nil])
([nil nil ((3084 . 3090)) nil (25245 36241 894461 800000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3086) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#("c" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3087) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (#("e" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3088) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (#("s" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3089) (undo-tree-id155 . -1) (undo-tree-id156 . -1) 3090) nil (25245 36241 894455 700000) 0 nil])
([nil nil ((3086 . 3098)) nil (25245 36241 891550 900000) 0 nil])
([nil nil ((3098 . 3119)) nil (25245 36241 891549 600000) 0 nil])
([nil nil ((3119 . 3131)) nil (25245 36241 891548 500000) 0 nil])
([nil nil ((3131 . 3136)) nil (25245 36241 891547 100000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3134) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (#("y" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3135) (undo-tree-id135 . -1) (undo-tree-id136 . -1) 3136) nil (25245 36241 891544 900000) 0 nil])
([nil nil ((3134 . 3155)) nil (25245 36241 891536 400000) 0 nil])
([nil nil ((3155 . 3169)) nil (25245 36241 891534 700000) 0 nil])
([nil nil ((3169 . 3185)) nil (25245 36241 891533 500000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3184) (undo-tree-id130 . -1) (undo-tree-id131 . -1) 3185) nil (25245 36241 891532 0) 0 nil])
([nil nil ((3184 . 3190)) nil (25245 36241 891528 600000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3165) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) 3166) nil (25245 36241 891527 0) 0 nil])
([nil nil ((3133 . 3140)) nil (25245 36241 891521 100000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3138) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (#("i" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3139) (undo-tree-id125 . -1) (undo-tree-id126 . -1) 3140) nil (25245 36241 891518 800000) 0 nil])
([nil nil ((3138 . 3159)) nil (25245 36241 891511 900000) 0 nil])
([nil nil ((3159 . 3169)) nil (25245 36241 891510 800000) 0 nil])
([nil nil ((3169 . 3190)) nil (25245 36241 891509 600000) 0 nil])
([nil nil ((3190 . 3202)) nil (25245 36241 891508 400000) 0 nil])
([nil nil ((3202 . 3210)) nil (25245 36241 891507 100000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . 3210) (undo-tree-id116 . -1) (#("B" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . 3210) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1)) nil (25245 36241 891504 700000) 0 nil])
([nil nil ((3210 . 3212)) nil (25245 36241 891498 300000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3209) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) 3210) nil (25245 36241 891495 700000) 0 nil])
([nil nil ((3209 . 3212)) nil (25245 36241 891482 200000) 0 nil])
([nil nil ((#("," 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3245) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3246) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) 3247) nil (25245 36241 891477 0) 0 nil])
([nil nil ((3245 . 3248)) nil (25245 36241 889962 800000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3247) (undo-tree-id91 . -1) (undo-tree-id92 . -1) 3248) nil (25245 36241 889961 200000) 0 nil])
([nil nil ((3247 . 3258)) nil (25245 36241 889957 900000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . 3258) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#("l" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . 3258) (undo-tree-id77 . -1) (#("l" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . 3258) (undo-tree-id78 . -1) (#("i" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . 3258) (undo-tree-id79 . -1) (#("w" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . 3258) (undo-tree-id80 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . 3258) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#("e" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . 3258) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#("m" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . 3258) (undo-tree-id86 . -1) (#("i" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . 3258) (undo-tree-id87 . -1) (undo-tree-id88 . 1) (#("t" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . 3258) (undo-tree-id89 . -1) (undo-tree-id90 . 1)) nil (25245 36241 889953 700000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3263) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("l" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3264) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#("o" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3265) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("w" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3266) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#("e" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3267) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("r" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3268) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) 3269) nil (25245 36241 889928 500000) 0 nil])
([nil nil ((3263 . 3268)) nil (25245 36241 889872 0) 0 nil])
([nil nil ((3268 . 3273)) nil (25245 36241 889870 700000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3270) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("o" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3271) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("w" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3272) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 3273) nil (25245 36241 889867 900000) 0 nil])
([nil nil ((3270 . 3275)) nil (25245 36241 889855 600000) 0 nil])
([nil nil ((3275 . 3279)) nil (25245 36241 889854 300000) 0 nil])
([nil nil ((3317 . 3321)) nil (25245 36241 889852 900000) 0 nil])
([nil nil ((3360 . 3364)) nil (25245 36241 889851 0) 0 nil])
([nil nil ((#("   " 0 3 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3355) (undo-tree-id0 . -3) (undo-tree-id1 . -3) (undo-tree-id2 . -3) (undo-tree-id3 . -3) (undo-tree-id4 . -3) (undo-tree-id5 . -3) (#("   " 0 3 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3315) (undo-tree-id6 . -3) (#("   " 0 3 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3276) (undo-tree-id7 . -3)) nil (25245 36241 889845 200000) 0 nil])
([nil nil ((3314 . 3318) (t 25245 36248 580901 300000)) nil (25245 36462 523024 500000) 0 nil])
([nil nil ((3318 . 3335)) nil (25245 36462 523022 800000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3334) (undo-tree-id567 . -1) (undo-tree-id568 . -1) 3335) nil (25245 36462 523021 0) 0 nil])
([nil nil ((3334 . 3336)) nil (25245 36462 523015 200000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3332) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3333) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (#("a" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3334) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (#("l" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3335) (undo-tree-id565 . -1) (undo-tree-id566 . -1) 3336) nil (25245 36462 523011 0) 0 nil])
([nil nil ((3332 . 3353)) nil (25245 36462 522978 500000) 0 nil])
([nil nil ((3353 . 3358)) nil (25245 36462 522977 200000) 0 nil])
([nil nil ((3358 . 3379)) nil (25245 36462 522975 900000) 0 nil])
([nil nil ((3379 . 3397)) nil (25245 36462 522974 200000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3385) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (#("e" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3386) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (#("l" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3387) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (#("p" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3388) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (#("s" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3389) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3390) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (#("t" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3391) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (#("i" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3392) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (#("m" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3393) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (#("e" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3394) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3395) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (#("p" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3396) (undo-tree-id540 . -1) (undo-tree-id541 . -1) 3397) nil (25245 36462 522955 800000) 0 nil])
([nil nil ((3385 . 3406)) nil (25245 36462 522713 600000) 0 nil])
([nil nil ((3406 . 3422)) nil (25245 36462 522710 500000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3418) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (#("t" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3419) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (#("e" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3420) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (#("r" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3421) (undo-tree-id384 . -1) (undo-tree-id385 . -1) 3422) nil (25245 36462 522704 300000) 0 nil])
([nil nil ((3418 . 3426)) nil (25245 36462 522662 900000) 0 nil])
([nil nil ((3426 . 3447)) nil (25245 36462 522661 100000) 0 nil])
([nil nil ((3447 . 3450)) nil (25245 36462 522659 100000) 0 nil])
([nil nil ((3450 . 3462)) nil (25245 36462 522656 200000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3461) (undo-tree-id364 . -1) (undo-tree-id365 . -1) 3462) nil (25245 36462 522653 800000) 0 nil])
([nil nil ((3461 . 3481)) nil (25245 36462 522647 800000) 0 nil])
([nil nil ((3481 . 3502)) nil (25245 36462 522645 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3501) (undo-tree-id362 . -1) (undo-tree-id363 . -1) 3502) nil (25245 36462 522642 300000) 0 nil])
([nil nil ((3501 . 3513)) nil (25245 36462 522636 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3511) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (#("e" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3512) (undo-tree-id360 . -1) (undo-tree-id361 . -1) 3513) nil (25245 36462 522632 900000) 0 nil])
([nil nil ((3511 . 3519)) nil (25245 36462 522622 400000) 0 nil])
([nil nil ((3519 . 3539)) nil (25245 36462 522621 100000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3537) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (#("h" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3538) (undo-tree-id354 . -1) (undo-tree-id355 . -1) 3539) nil (25245 36462 522618 800000) 0 nil])
([nil nil ((3537 . 3545)) nil (25245 36462 522610 100000) 0 nil])
([nil nil ((3545 . 3551)) nil (25245 36462 522608 500000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3549) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (#("l" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3550) (undo-tree-id348 . -1) (undo-tree-id349 . -1) 3551) nil (25245 36462 522605 800000) 0 nil])
([nil nil ((3549 . 3552)) nil (25245 36462 522597 500000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3549) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (#("l" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3550) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (#("i" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3551) (undo-tree-id342 . -1) (undo-tree-id343 . -1) 3552) nil (25245 36462 522590 300000) 0 nil])
([nil nil ((3549 . 3566)) nil (25245 36462 522572 200000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3597) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) 3598) nil (25245 36462 522570 500000) 0 nil])
([nil nil ((3605 . 3609)) nil (25245 36462 522565 0) 0 nil])
([nil nil ((3609 . 3620)) nil (25245 36462 522563 600000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3619) (undo-tree-id327 . -1) (undo-tree-id328 . -1) 3620) nil (25245 36462 522561 800000) 0 nil])
([nil nil ((3619 . 3640)) nil (25245 36462 522558 100000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3638) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (#("p" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3639) (undo-tree-id325 . -1) (undo-tree-id326 . -1) 3640) nil (25245 36462 522555 900000) 0 nil])
([nil nil ((3638 . 3652)) nil (25245 36462 522547 700000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3648) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (#("=" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3649) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3650) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (#("t" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3651) (undo-tree-id319 . -1) (undo-tree-id320 . -1) 3652) nil (25245 36462 522543 900000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3647) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) 3648) nil (25245 36462 522518 200000) 0 nil])
([nil nil ((3647 . 3662)) nil (25245 36462 522502 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3661) (undo-tree-id289 . -1) (undo-tree-id290 . -1) 3662) nil (25245 36462 522499 600000) 0 nil])
([nil nil ((3661 . 3668)) nil (25245 36462 522496 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3667) (undo-tree-id287 . -1) (undo-tree-id288 . -1) 3668) nil (25245 36462 522494 400000) 0 nil])
([nil nil ((3667 . 3688)) nil (25245 36462 522490 500000) 0 nil])
([nil nil ((3688 . 3690)) nil (25245 36462 522489 200000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3688) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (#("o" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3689) (undo-tree-id285 . -1) (undo-tree-id286 . -1) 3690) nil (25245 36462 522487 100000) 0 nil])
([nil nil ((3688 . 3695)) nil (25245 36462 522478 600000) 0 nil])
([nil nil ((3695 . 3704)) nil (25245 36462 522477 300000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3703) (undo-tree-id279 . -1) (undo-tree-id280 . -1) 3704) nil (25245 36462 522475 700000) 0 nil])
([nil nil ((3703 . 3708)) nil (25245 36462 522471 700000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3707) (undo-tree-id277 . -1) (undo-tree-id278 . -1) 3708) nil (25245 36462 522469 300000) 0 nil])
([nil nil ((3707 . 3708)) nil (25245 36462 522465 500000) 0 nil])
([nil nil ((3658 . 3667) (#("donnations" 0 10 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3658) (undo-tree-id263 . -1) (undo-tree-id264 . -2) (undo-tree-id265 . -3) (undo-tree-id266 . -3) (undo-tree-id267 . -3) (undo-tree-id268 . -4) (undo-tree-id269 . -5) (undo-tree-id270 . -6) (undo-tree-id271 . -7) (undo-tree-id272 . -8) (undo-tree-id273 . -9) (undo-tree-id274 . -9) (undo-tree-id275 . -9) (undo-tree-id276 . -10) 3708) nil (25245 36462 522461 900000) 0 nil])
([nil nil ((3736 . 3741)) nil (25245 36462 522421 200000) 0 nil])
([nil nil ((3741 . 3745)) nil (25245 36462 522418 500000) 0 nil])
([nil nil ((#("G" 0 1 (fontified t line-prefix "" wrap-prefix #("    " 0 4 (face org-indent)))) . -3741) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (#("i" 0 1 (fontified t line-prefix "" wrap-prefix #("    " 0 4 (face org-indent)))) . -3742) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (#("n" 0 1 (fontified t line-prefix "" wrap-prefix #("    " 0 4 (face org-indent)))) . -3743) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (#("a" 0 1 (fontified t line-prefix "" wrap-prefix #("    " 0 4 (face org-indent)))) . -3744) (undo-tree-id261 . -1) (undo-tree-id262 . -1) 3745) nil (25245 36462 522408 900000) 0 nil])
([nil nil ((3741 . 3759)) nil (25245 36462 522339 500000) 0 nil])
([nil nil ((3759 . 3764)) nil (25245 36462 522337 800000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t line-prefix "" wrap-prefix #("    " 0 4 (face org-indent)))) . -3758) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (#("
" 0 1 (fontified t line-prefix "" wrap-prefix #("    " 0 4 (face org-indent)))) . -3759) (undo-tree-id222 . -1) (undo-tree-id223 . 1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix #(" " 0 1 (face org-indent)))) . -3760) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("  " 0 2 (face org-indent)))) . -3761) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("   " 0 3 (face org-indent)))) . -3762) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("    " 0 4 (face org-indent)))) . -3763) (undo-tree-id241 . -1) (undo-tree-id242 . -1) 3764) nil (25245 36462 522330 600000) 0 nil])
([nil current ((3758 . 3761)) nil (25245 36462 522271 200000) 0 nil])
nil
