(undo-tree-save-format-version . 1)
"ec70f0a4eaad1729501c330a6a1581f6e6443125"
[nil nil nil nil (25248 11365 538871 100000) 0 nil]
([nil nil ((119 . 126) (t 25248 11176 685910 900000)) nil (25248 11365 538869 200000) 0 nil])
([nil nil ((126 . 136)) nil (25248 11365 538867 0) 0 nil])
([nil nil ((#("Start here" 0 10 (fontified t line-prefix "" wrap-prefix "")) . -138) (undo-tree-id385 . -10) (undo-tree-id386 . -10) (undo-tree-id387 . -10) (undo-tree-id388 . -10) (undo-tree-id389 . -10)) nil (25248 11365 538864 0) 0 nil])
([nil nil ((138 . 155)) nil (25248 11365 538851 900000) 0 nil])
([nil nil ((155 . 176)) nil (25248 11365 538835 900000) 0 nil])
([nil nil ((176 . 191)) nil (25248 11365 538833 800000) 0 nil])
([nil nil ((191 . 200)) nil (25248 11365 538831 900000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -197) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (#("o" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -198) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (#("c" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -199) (undo-tree-id383 . -1) (undo-tree-id384 . -1) 200) nil (25248 11365 538828 0) 0 nil])
([nil nil ((197 . 203)) nil (25248 11365 538813 300000) 0 nil])
([nil nil ((197 . 199)) nil (25248 11365 538812 200000) 0 nil])
([nil nil ((nil rear-nonsticky nil 220 . 221) (nil fontified nil 199 . 221) (199 . 221)) nil (25248 11365 538811 0) 0 nil])
([nil nil ((221 . 223)) nil (25248 11365 538809 300000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t line-prefix "" wrap-prefix "" help-echo "LINK: https://www.docker.comDocker" htmlize-link (:uri "https://www.docker.comDocker"))) . 223) (undo-tree-id372 . -1)) nil (25248 11365 538807 900000) 0 nil])
([nil nil ((223 . 224)) nil (25248 11365 538805 700000) 0 nil])
([nil nil ((229 . 250)) nil (25248 11365 538804 600000) 0 nil])
([nil nil ((250 . 251)) nil (25248 11365 538803 500000) 0 nil])
([nil nil ((251 . 267)) nil (25248 11365 538802 400000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -264) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (#("n" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -265) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (#("g" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -266) (undo-tree-id370 . -1) (undo-tree-id371 . -1) 267) nil (25248 11365 538799 800000) 0 nil])
([nil nil ((264 . 277)) nil (25248 11365 538784 500000) 0 nil])
([nil nil ((277 . 289)) nil (25248 11365 538782 700000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -271) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("o" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -272) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#("c" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -273) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (#("k" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -274) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (#("e" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -275) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (#("r" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -276) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -277) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (#("v" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -278) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (#("e" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -279) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (#("r" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -280) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (#("s" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -281) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (#("i" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -282) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (#("o" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -283) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (#("n" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -284) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -285) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (#("o" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -286) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (#("f" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -287) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -288) (undo-tree-id358 . -1) (undo-tree-id359 . -1) 289) nil (25248 11365 538739 600000) 0 nil])
([nil nil ((271 . 275)) nil (25248 11365 536986 500000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -272) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("o" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -273) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("c" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -274) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 275) nil (25248 11365 536983 200000) 0 nil])
([nil nil ((272 . 279)) nil (25248 11365 536970 100000) 0 nil])
([nil nil ((279 . 295)) nil (25248 11365 536969 0) 0 nil])
([nil nil ((295 . 297)) nil (25248 11365 536967 900000) 0 nil])
([nil nil ((nil rear-nonsticky nil 315 . 316) (nil fontified nil 297 . 316) (297 . 316)) nil (25248 11366 73445 900000) 0 nil])
([nil nil ((316 . 317)) nil (25248 11818 474250 400000) 0 nil] [nil nil ((316 . 321)) ((#("]]UUS" 0 1 (fontified t line-prefix "" wrap-prefix "" help-echo "LINK: https://uisp.ui.com" htmlize-link (:uri "https://uisp.ui.com") face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 1 2 (fontified t line-prefix "" wrap-prefix "" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo "LINK: https://uisp.ui.com" htmlize-link (:uri "https://uisp.ui.com") face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 2 3 (fontified t line-prefix "" wrap-prefix "") 3 4 (fontified t line-prefix "" wrap-prefix "") 4 5 (fontified t line-prefix "" wrap-prefix "")) . 316) (undo-tree-id390 . -5) (undo-tree-id391 . -4) (undo-tree-id392 . -5) (undo-tree-id393 . -4) (undo-tree-id394 . 3) (undo-tree-id395 . -5) (undo-tree-id396 . -5)) (25248 11365 539160 100000) 0 nil])
([nil nil ((317 . 329)) nil (25248 11818 474249 300000) 0 nil])
([nil nil ((#("U" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -319) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("S" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -320) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 321) ((319 . 321)) (25248 11365 536958 100000) 0 nil])
([nil nil ((329 . 333)) nil (25248 11818 474248 300000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -329) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (#("T" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -330) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (#("h" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -331) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (#("a" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -332) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) 333) nil (25248 11818 474245 300000) 0 nil])
([nil nil ((329 . 332)) nil (25248 11818 474227 700000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -330) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (#("T" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -331) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) 332) nil (25248 11818 474226 100000) 0 nil])
([nil nil ((330 . 344)) nil (25248 11818 474220 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -341) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (#("i" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -342) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (#("v" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -343) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) 344) nil (25248 11818 474217 900000) 0 nil])
([nil nil ((341 . 356)) nil (25248 11818 474206 700000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -355) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) 356) nil (25248 11818 474205 100000) 0 nil])
([nil nil ((355 . 358)) nil (25248 11818 474202 500000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -354) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (#("l" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -355) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (#("u" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -356) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (#("e" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -357) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) 358) nil (25248 11818 474199 500000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -334) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (#("w" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -335) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (#("i" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -336) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (#("l" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -337) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (#("l" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -338) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -339) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (#("g" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -340) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (#("i" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -341) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (#("v" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -342) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (#("e" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -343) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -344) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (#("y" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -345) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (#("o" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -346) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (#("u" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -347) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -348) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (#("s" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -349) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (#("o" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -350) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (#("m" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -351) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (#("e" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -352) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -353) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) 354) nil (25248 11818 474147 300000) 0 nil])
([nil nil ((334 . 339)) nil (25248 11818 473582 600000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -338) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) 339) nil (25248 11818 473581 400000) 0 nil])
([nil nil ((338 . 353)) nil (25248 11818 473578 900000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -352) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) 353) nil (25248 11818 473577 300000) 0 nil])
([nil nil ((352 . 368)) nil (25248 11818 473574 500000) 0 nil])
([nil nil ((368 . 389)) nil (25248 11818 473573 400000) 0 nil])
([nil nil ((389 . 396)) nil (25248 11818 473572 300000) 0 nil])
([nil nil ((396 . 399)) nil (25248 11818 473571 300000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -398) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) 399) nil (25248 11818 473570 100000) 0 nil])
([nil nil ((398 . 416)) nil (25248 11818 473567 500000) 0 nil])
([nil nil ((416 . 417)) nil (25248 11818 473566 500000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -416) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) 417) nil (25248 11818 473565 100000) 0 nil])
([nil nil ((416 . 417)) nil (25248 11818 473562 600000) 0 nil])
([nil nil ((#("," 0 1 (fontified t line-prefix "" wrap-prefix "")) . -416) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) 417) nil (25248 11818 473561 300000) 0 nil])
([nil nil ((416 . 423)) nil (25248 11818 473558 600000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -419) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (#("u" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -420) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (#("b" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -421) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (#("s" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -422) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) 423) nil (25248 11818 473556 0) 0 nil])
([nil nil ((419 . 431)) nil (25248 11818 473539 100000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -426) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (#("a" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -427) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (#("n" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -428) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (#("d" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -429) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -430) (undo-tree-id989 . -1) (undo-tree-id990 . -1) 431) nil (25248 11818 473535 800000) 0 nil])
([nil nil ((426 . 432)) nil (25248 11818 473511 500000) 0 nil])
([nil nil ((432 . 433)) nil (25248 11818 473510 500000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -430) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (#("i" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -431) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (#("c" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -432) (undo-tree-id959 . -1) (undo-tree-id960 . -1) 433) nil (25248 11818 473508 0) 0 nil])
([nil nil ((430 . 434)) nil (25248 11818 473498 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -430) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (#("i" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -431) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (#("c" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -432) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (#("h" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -433) (undo-tree-id947 . -1) (undo-tree-id948 . -1) 434) nil (25248 11818 473495 200000) 0 nil])
([nil nil ((430 . 451)) nil (25248 11818 473479 400000) 0 nil])
([nil nil ((451 . 460)) nil (25248 11818 473478 500000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -459) (undo-tree-id927 . -1) (undo-tree-id928 . -1) 460) nil (25248 11818 473476 800000) 0 nil])
([nil nil ((459 . 480)) nil (25248 11818 473473 600000) 0 nil])
([nil nil ((480 . 481)) nil (25248 11818 473472 500000) 0 nil])
([nil nil ((#("[fn::That's a pretty heavy hint about the infrastructure I use here; yes I'm using Ubiquiti's routers, switches, and hubs to tie by home network together]. " 0 154 (fontified t line-prefix "" wrap-prefix "" help-echo "Footnote reference" font-lock-fontified t mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-footnote) 154 156 (fontified t line-prefix "" wrap-prefix "" help-echo "Footnote reference" font-lock-fontified t)) . 325) (undo-tree-id638 . -156) (undo-tree-id639 . -1) (undo-tree-id640 . -2) (undo-tree-id641 . -3) (undo-tree-id642 . -4) (undo-tree-id643 . -4) (undo-tree-id644 . -4) (undo-tree-id645 . -4) (undo-tree-id646 . -4) (undo-tree-id647 . -4) (undo-tree-id648 . -4) (undo-tree-id649 . -4) (undo-tree-id650 . -4) (undo-tree-id651 . -5) (undo-tree-id652 . -5) (undo-tree-id653 . -5) (undo-tree-id654 . -5) (undo-tree-id655 . -5) (undo-tree-id656 . -6) (undo-tree-id657 . -7) (undo-tree-id658 . -8) (undo-tree-id659 . -9) (undo-tree-id660 . -9) (undo-tree-id661 . -9) (undo-tree-id662 . -9) (undo-tree-id663 . -9) (undo-tree-id664 . -9) (undo-tree-id665 . -9) (undo-tree-id666 . -9) (undo-tree-id667 . -9) (undo-tree-id668 . -9) (undo-tree-id669 . -9) (undo-tree-id670 . -9) (undo-tree-id671 . -9) (undo-tree-id672 . -9) (undo-tree-id673 . -9) (undo-tree-id674 . -9) (undo-tree-id675 . -9) (undo-tree-id676 . -9) (undo-tree-id677 . -9) (undo-tree-id678 . -9) (undo-tree-id679 . -9) (undo-tree-id680 . -9) (undo-tree-id681 . -9) (undo-tree-id682 . -9) (undo-tree-id683 . -9) (undo-tree-id684 . -9) (undo-tree-id685 . -9) (undo-tree-id686 . -9) (undo-tree-id687 . -9) (undo-tree-id688 . -9) (undo-tree-id689 . -9) (undo-tree-id690 . -9) (undo-tree-id691 . -9) (undo-tree-id692 . -9) (undo-tree-id693 . -9) (undo-tree-id694 . -9) (undo-tree-id695 . -9) (undo-tree-id696 . -9) (undo-tree-id697 . -9) (undo-tree-id698 . -9) (undo-tree-id699 . -9) (undo-tree-id700 . -9) (undo-tree-id701 . -9) (undo-tree-id702 . -9) (undo-tree-id703 . -9) (undo-tree-id704 . -9) (undo-tree-id705 . -9) (undo-tree-id706 . -9) (undo-tree-id707 . -9) (undo-tree-id708 . -9) (undo-tree-id709 . -9) (undo-tree-id710 . -9) (undo-tree-id711 . -9) (undo-tree-id712 . -9) (undo-tree-id713 . -9) (undo-tree-id714 . -9) (undo-tree-id715 . -10) (undo-tree-id716 . -11) (undo-tree-id717 . -12) (undo-tree-id718 . -13) (undo-tree-id719 . -13) (undo-tree-id720 . -13) (undo-tree-id721 . -14) (undo-tree-id722 . -15) (undo-tree-id723 . -16) (undo-tree-id724 . -17) (undo-tree-id725 . -18) (undo-tree-id726 . -19) (undo-tree-id727 . -20) (undo-tree-id728 . -21) (undo-tree-id729 . -22) (undo-tree-id730 . -23) (undo-tree-id731 . -24) (undo-tree-id732 . -25) (undo-tree-id733 . -26) (undo-tree-id734 . -27) (undo-tree-id735 . -27) (undo-tree-id736 . -27) (undo-tree-id737 . -28) (undo-tree-id738 . -29) (undo-tree-id739 . -30) (undo-tree-id740 . -31) (undo-tree-id741 . -32) (undo-tree-id742 . -33) (undo-tree-id743 . -34) (undo-tree-id744 . -35) (undo-tree-id745 . -36) (undo-tree-id746 . -37) (undo-tree-id747 . -38) (undo-tree-id748 . -39) (undo-tree-id749 . -40) (undo-tree-id750 . -41) (undo-tree-id751 . -42) (undo-tree-id752 . -43) (undo-tree-id753 . -44) (undo-tree-id754 . -45) (undo-tree-id755 . -46) (undo-tree-id756 . -47) (undo-tree-id757 . -48) (undo-tree-id758 . -49) (undo-tree-id759 . -50) (undo-tree-id760 . -51) (undo-tree-id761 . -52) (undo-tree-id762 . -53) (undo-tree-id763 . -54) (undo-tree-id764 . -55) (undo-tree-id765 . -56) (undo-tree-id766 . -57) (undo-tree-id767 . -58) (undo-tree-id768 . -59) (undo-tree-id769 . -60) (undo-tree-id770 . -61) (undo-tree-id771 . -62) (undo-tree-id772 . -63) (undo-tree-id773 . -64) (undo-tree-id774 . -65) (undo-tree-id775 . -66) (undo-tree-id776 . -67) (undo-tree-id777 . -68) (undo-tree-id778 . -69) (undo-tree-id779 . -70) (undo-tree-id780 . -70) (undo-tree-id781 . -70) (undo-tree-id782 . -71) (undo-tree-id783 . -72) (undo-tree-id784 . -73) (undo-tree-id785 . -73) (undo-tree-id786 . -73) (undo-tree-id787 . -74) (undo-tree-id788 . -75) (undo-tree-id789 . -76) (undo-tree-id790 . -77) (undo-tree-id791 . -78) (undo-tree-id792 . -79) (undo-tree-id793 . -80) (undo-tree-id794 . -81) (undo-tree-id795 . -82) (undo-tree-id796 . -83) (undo-tree-id797 . -84) (undo-tree-id798 . -85) (undo-tree-id799 . -86) (undo-tree-id800 . -87) (undo-tree-id801 . -88) (undo-tree-id802 . -89) (undo-tree-id803 . -90) (undo-tree-id804 . -91) (undo-tree-id805 . -91) (undo-tree-id806 . -91) (undo-tree-id807 . -91) (undo-tree-id808 . -91) (undo-tree-id809 . -92) (undo-tree-id810 . -93) (undo-tree-id811 . -94) (undo-tree-id812 . -94) (undo-tree-id813 . -94) (undo-tree-id814 . -94) (undo-tree-id815 . -94) (undo-tree-id816 . -94) (undo-tree-id817 . -94) (undo-tree-id818 . -94) (undo-tree-id819 . 73) (undo-tree-id820 . -93) (undo-tree-id821 . -94) (undo-tree-id822 . -95) (undo-tree-id823 . -96) (undo-tree-id824 . -97) (undo-tree-id825 . -98) (undo-tree-id826 . -99) (undo-tree-id827 . -100) (undo-tree-id828 . -101) (undo-tree-id829 . -101) (undo-tree-id830 . -101) (undo-tree-id831 . -101) (undo-tree-id832 . -101) (undo-tree-id833 . -101) (undo-tree-id834 . -101) (undo-tree-id835 . -101) (undo-tree-id836 . -101) (undo-tree-id837 . -101) (undo-tree-id838 . -101) (undo-tree-id839 . -102) (undo-tree-id840 . -103) (undo-tree-id841 . -104) (undo-tree-id842 . -105) (undo-tree-id843 . -105) (undo-tree-id844 . -105) (undo-tree-id845 . -105) (undo-tree-id846 . -105) (undo-tree-id847 . -105) (undo-tree-id848 . -105) (undo-tree-id849 . -105) (undo-tree-id850 . -105) (undo-tree-id851 . -105) (undo-tree-id852 . -105) (undo-tree-id853 . -105) (undo-tree-id854 . -105) (undo-tree-id855 . -105) (undo-tree-id856 . -105) (undo-tree-id857 . -106) (undo-tree-id858 . -107) (undo-tree-id859 . -108) (undo-tree-id860 . -109) (undo-tree-id861 . -110) (undo-tree-id862 . -111) (undo-tree-id863 . -112) (undo-tree-id864 . -113) (undo-tree-id865 . -114) (undo-tree-id866 . -115) (undo-tree-id867 . -116) (undo-tree-id868 . -117) (undo-tree-id869 . -118) (undo-tree-id870 . -119) (undo-tree-id871 . -120) (undo-tree-id872 . -121) (undo-tree-id873 . -122) (undo-tree-id874 . -123) (undo-tree-id875 . -124) (undo-tree-id876 . -125) (undo-tree-id877 . -126) (undo-tree-id878 . -127) (undo-tree-id879 . -128) (undo-tree-id880 . -129) (undo-tree-id881 . -130) (undo-tree-id882 . -131) (undo-tree-id883 . -132) (undo-tree-id884 . -133) (undo-tree-id885 . -134) (undo-tree-id886 . -134) (undo-tree-id887 . -134) (undo-tree-id888 . -135) (undo-tree-id889 . -136) (undo-tree-id890 . -137) (undo-tree-id891 . -138) (undo-tree-id892 . -139) (undo-tree-id893 . -140) (undo-tree-id894 . -141) (undo-tree-id895 . -142) (undo-tree-id896 . -143) (undo-tree-id897 . -144) (undo-tree-id898 . -145) (undo-tree-id899 . -146) (undo-tree-id900 . -147) (undo-tree-id901 . -148) (undo-tree-id902 . -149) (undo-tree-id903 . -150) (undo-tree-id904 . -151) (undo-tree-id905 . -152) (undo-tree-id906 . -153) (undo-tree-id907 . -154) (undo-tree-id908 . -155) (undo-tree-id909 . -156) (undo-tree-id910 . -156) (undo-tree-id911 . -156) (undo-tree-id912 . -156) (undo-tree-id913 . -46) (undo-tree-id914 . -42) (undo-tree-id915 . -38) (undo-tree-id916 . -32) (undo-tree-id917 . -27) (undo-tree-id918 . -21) (undo-tree-id919 . -14) (undo-tree-id920 . -12) (undo-tree-id921 . -5) (undo-tree-id922 . -1) (undo-tree-id923 . 156) (undo-tree-id924 . -1) (undo-tree-id925 . 3) (undo-tree-id926 . -154)) nil (25248 11818 473457 200000) 0 nil])
([nil nil ((136 . 140)) nil (25248 11818 473182 300000) 0 nil])
([nil nil ((#("Q" 0 1 (fontified t font-lock-fontified t line-prefix "" wrap-prefix "" face org-meta-line)) . -138) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (#("i" 0 1 (fontified t font-lock-fontified t line-prefix "" wrap-prefix "" face org-meta-line)) . -139) (undo-tree-id636 . -1) (undo-tree-id637 . -1) 140) nil (25248 11818 473180 800000) 0 nil])
([nil nil ((138 . 145)) nil (25248 11818 473174 400000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t font-lock-fontified t line-prefix "" wrap-prefix "" face org-meta-line)) . -144) (undo-tree-id630 . -1) (undo-tree-id631 . -1) 145) nil (25248 11818 473173 100000) 0 nil])
([nil nil ((144 . 145)) nil (25248 11818 473169 0) 0 nil])
([nil nil ((333 . 340)) nil (25248 11818 473168 100000) 0 nil])
([nil nil ((#("H" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -336) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (#("n" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -337) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (#("e" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -338) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -339) (undo-tree-id628 . -1) (undo-tree-id629 . -1) 340) nil (25248 11818 473165 300000) 0 nil])
([nil nil ((336 . 357)) nil (25248 11818 473144 900000) 0 nil])
([nil nil ((357 . 375)) nil (25248 11818 473143 900000) 0 nil])
([nil nil ((375 . 391)) nil (25248 11818 473143 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -389) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (#("u" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -390) (undo-tree-id605 . -1) (undo-tree-id606 . -1) 391) nil (25248 11818 473141 300000) 0 nil])
([nil nil ((389 . 410)) nil (25248 11818 473133 300000) 0 nil])
([nil nil ((410 . 414)) nil (25248 11818 473131 800000) 0 nil])
([nil nil ((414 . 419)) nil (25248 11818 473130 100000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -416) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (#("t" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -417) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -418) (undo-tree-id599 . -1) (undo-tree-id600 . -1) 419) nil (25248 11818 473126 400000) 0 nil])
([nil nil ((416 . 437)) nil (25248 11818 473113 300000) 0 nil])
([nil nil ((437 . 438)) nil (25248 11818 473112 200000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -436) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -437) (undo-tree-id585 . -1) (undo-tree-id586 . -1) 438) nil (25248 11818 473110 500000) 0 nil])
([nil nil ((436 . 437)) nil (25248 11818 473103 400000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -436) (undo-tree-id578 . -1) (undo-tree-id579 . -1) 437) nil (25248 11818 473102 100000) 0 nil])
([nil nil ((436 . 452)) nil (25248 11818 473099 300000) 0 nil])
([nil nil ((452 . 453)) nil (25248 11818 473098 300000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -452) (undo-tree-id576 . -1) (undo-tree-id577 . -1) 453) nil (25248 11818 473096 900000) 0 nil])
([nil nil ((452 . 459)) nil (25248 11818 473094 100000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -458) (undo-tree-id574 . -1) (undo-tree-id575 . -1) 459) nil (25248 11818 473092 900000) 0 nil])
([nil nil ((458 . 479)) nil (25248 11818 473090 200000) 0 nil])
([nil nil ((479 . 481)) nil (25248 11818 473089 400000) 0 nil])
([nil nil ((481 . 487)) nil (25248 11818 473088 300000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -481) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (#("n" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -482) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (#("'" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -483) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (#("t" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -484) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -485) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (#("u" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -486) (undo-tree-id572 . -1) (undo-tree-id573 . -1) 487) nil (25248 11818 473083 800000) 0 nil])
([nil nil ((481 . 499)) nil (25248 11818 472608 100000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -498) (undo-tree-id521 . -1) (undo-tree-id522 . -1) 499) nil (25248 11818 472606 600000) 0 nil])
([nil nil ((498 . 501)) nil (25248 11818 472603 800000) 0 nil])
([nil nil ((501 . 505)) nil (25248 11818 472602 900000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -502) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (#("r" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -503) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (#("a" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -504) (undo-tree-id519 . -1) (undo-tree-id520 . -1) 505) nil (25248 11818 472600 900000) 0 nil])
([nil nil ((502 . 512)) nil (25248 11818 472589 100000) 0 nil])
([nil nil ((512 . 523)) nil (25248 11818 472587 900000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -518) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (#("n" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -519) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (#("'" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -520) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (#("t" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -521) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -522) (undo-tree-id507 . -1) (undo-tree-id508 . -1) 523) nil (25248 11818 472581 400000) 0 nil])
([nil nil ((518 . 519)) nil (25248 11818 471111 500000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -518) (undo-tree-id468 . -1) (undo-tree-id469 . -1) 519) nil (25248 11818 471110 300000) 0 nil])
([nil nil ((518 . 522)) nil (25248 11818 471107 700000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -521) (undo-tree-id466 . -1) (undo-tree-id467 . -1) 522) nil (25248 11818 471106 500000) 0 nil])
([nil nil ((521 . 542)) nil (25248 11818 471103 400000) 0 nil])
([nil nil ((542 . 547)) nil (25248 11818 471102 400000) 0 nil])
([nil nil ((547 . 565)) nil (25248 11818 471101 500000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -562) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (#("S" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -563) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (#("o" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -564) (undo-tree-id464 . -1) (undo-tree-id465 . -1) 565) nil (25248 11818 471099 400000) 0 nil])
([nil nil ((572 . 573)) nil (25248 11818 471088 100000) 0 nil])
([nil nil ((573 . 594)) nil (25248 11818 471087 0) 0 nil])
([nil nil ((594 . 604)) nil (25248 11818 471085 900000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -603) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) 604) nil (25248 11818 471084 500000) 0 nil])
([nil nil ((603 . 604)) nil (25248 11818 471078 600000) 0 nil])
([nil nil ((604 . 606)) nil (25248 11818 471077 500000) 0 nil])
([nil nil ((606 . 609)) nil (25248 11818 471076 600000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -608) (undo-tree-id446 . -1) (undo-tree-id447 . -1) 609) nil (25248 11818 471075 400000) 0 nil])
([nil nil ((608 . 614)) nil (25248 11818 471071 700000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -613) (undo-tree-id444 . -1) (undo-tree-id445 . -1) 614) nil (25248 11818 471069 400000) 0 nil])
([nil nil ((613 . 629)) nil (25248 11818 471066 0) 0 nil])
([nil nil ((#("v" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -628) (undo-tree-id442 . -1) (undo-tree-id443 . -1) 629) nil (25248 11818 471064 0) 0 nil])
([nil nil ((628 . 631)) nil (25248 11818 471059 500000) 0 nil])
([nil nil ((631 . 650)) nil (25248 11818 471058 400000) 0 nil])
([nil nil ((640 . 647) (#("manchine" 0 8 (fontified t line-prefix "" wrap-prefix "")) . -640) (undo-tree-id434 . -1) (undo-tree-id435 . -2) (undo-tree-id436 . -3) (undo-tree-id437 . -4) (undo-tree-id438 . -5) (undo-tree-id439 . -6) (undo-tree-id440 . -7) (undo-tree-id441 . -8) 650) nil (25248 11818 471056 700000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -648) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) 649) nil (25248 11818 471048 600000) 0 nil])
([nil nil ((648 . 650)) nil (25248 11818 471039 900000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -648) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -649) (undo-tree-id423 . -1) (undo-tree-id424 . -1) 650) nil (25248 11818 471038 300000) 0 nil])
([nil nil ((648 . 653)) nil (25248 11818 471031 200000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -652) (undo-tree-id417 . -1) (undo-tree-id418 . -1) 653) nil (25248 11818 471029 500000) 0 nil])
([nil nil ((652 . 673)) nil (25248 11818 471026 600000) 0 nil])
([nil nil ((673 . 683)) nil (25248 11818 471025 500000) 0 nil])
([nil nil ((683 . 686)) nil (25248 11818 471024 500000) 0 nil])
([nil nil ((685 . 704)) nil (25248 11818 471023 300000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -701) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (#("l" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -702) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -703) (undo-tree-id415 . -1) (undo-tree-id416 . -1) 704) nil (25248 11818 471020 400000) 0 nil])
([nil nil ((701 . 703)) nil (25248 11818 471007 600000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -701) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (#("e" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -702) (undo-tree-id401 . -1) (undo-tree-id402 . -1) 703) nil (25248 11818 471004 500000) 0 nil])
([nil nil ((701 . 704)) nil (25248 11818 470985 200000) 0 nil])
([nil nil ((604 . 625) (t 25248 11825 763027 500000)) nil (25250 50252 884809 500000) 0 nil])
([nil nil ((625 . 646)) nil (25250 50252 884808 400000) 0 nil])
([nil nil ((646 . 654)) nil (25250 50252 884807 200000) 0 nil])
([nil nil ((654 . 668)) nil (25250 50252 884806 200000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -647) (undo-tree-id1880 . -1) (#("k" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -648) (undo-tree-id1881 . -1) (#("n" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -649) (undo-tree-id1882 . -1) (#("o" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -650) (undo-tree-id1883 . -1) (#("w" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -651) (undo-tree-id1884 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -652) (undo-tree-id1885 . -1) (#("w" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -653) (undo-tree-id1886 . -1) (#("h" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -654) (undo-tree-id1887 . -1) (#("a" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -655) (undo-tree-id1888 . -1) (#("t" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -656) (undo-tree-id1889 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -657) (undo-tree-id1890 . -1) (#("t" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -658) (undo-tree-id1891 . -1) (#("h" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -659) (undo-tree-id1892 . -1) (#("e" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -660) (undo-tree-id1893 . -1) (#("y" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -661) (undo-tree-id1894 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -662) (undo-tree-id1895 . -1) (#("m" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -663) (undo-tree-id1896 . -1) (#("e" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -664) (undo-tree-id1897 . -1) (#("a" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -665) (undo-tree-id1898 . -1) (#("n" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -666) (undo-tree-id1899 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -667) (undo-tree-id1900 . -1) 668) nil (25250 50252 884800 400000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -627) (undo-tree-id1860 . -1) (#("." 0 1 (fontified t line-prefix "" wrap-prefix "")) . -628) (undo-tree-id1861 . -1) (#("." 0 1 (fontified t line-prefix "" wrap-prefix "")) . -629) (undo-tree-id1862 . -1) (#("." 0 1 (fontified t line-prefix "" wrap-prefix "")) . -630) (undo-tree-id1863 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -631) (undo-tree-id1864 . -1) (#("s" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -632) (undo-tree-id1865 . -1) (#("o" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -633) (undo-tree-id1866 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -634) (undo-tree-id1867 . -1) (#("a" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -635) (undo-tree-id1868 . -1) (#("s" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -636) (undo-tree-id1869 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -637) (undo-tree-id1870 . -1) (#("l" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -638) (undo-tree-id1871 . -1) (#("o" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -639) (undo-tree-id1872 . -1) (#("n" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -640) (undo-tree-id1873 . -1) (#("g" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -641) (undo-tree-id1874 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -642) (undo-tree-id1875 . -1) (#("a" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -643) (undo-tree-id1876 . -1) (#("s" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -644) (undo-tree-id1877 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -645) (undo-tree-id1878 . -1) (#("I" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -646) (undo-tree-id1879 . -1) 647) nil (25250 50252 884750 200000) 0 nil])
([nil nil ((145 . 146)) nil (25250 50252 884731 600000) 0 nil])
([nil nil ((146 . 157)) nil (25250 50252 884730 700000) 0 nil])
([nil nil ((158 . 160)) nil (25250 50252 884729 800000) 0 nil])
([nil nil ((159 . 165)) nil (25250 50252 884728 800000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -163) (undo-tree-id1858 . -1) (#("n" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -164) (undo-tree-id1859 . -1) 165) nil (25250 50252 884727 400000) 0 nil])
([nil nil ((163 . 166)) nil (25250 50252 884724 800000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -164) (undo-tree-id1856 . -1) (#("'" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -165) (undo-tree-id1857 . -1) 166) nil (25250 50252 884723 400000) 0 nil])
([nil nil ((164 . 174)) nil (25250 50252 884721 0) 0 nil])
([nil nil ((174 . 192)) nil (25250 50252 884720 200000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -191) (undo-tree-id1855 . -1) 192) nil (25250 50252 884719 100000) 0 nil])
([nil nil ((191 . 199)) nil (25250 50252 884717 300000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -194) (undo-tree-id1850 . -1) (#("o" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -195) (undo-tree-id1851 . -1) (#("e" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -196) (undo-tree-id1852 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -197) (undo-tree-id1853 . -1) (#("a" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -198) (undo-tree-id1854 . -1) 199) nil (25250 50252 884715 500000) 0 nil])
([nil nil ((194 . 215)) nil (25250 50252 884710 200000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -211) (undo-tree-id1846 . -1) (#("b" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -212) (undo-tree-id1847 . -1) (#("o" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -213) (undo-tree-id1848 . -1) (#("k" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -214) (undo-tree-id1849 . -1) 215) nil (25250 50252 884708 300000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -210) (undo-tree-id1845 . -1) 211) nil (25250 50252 884702 600000) 0 nil])
([nil nil ((210 . 229)) nil (25250 50252 884700 800000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -228) (undo-tree-id1844 . -1) 229) nil (25250 50252 884699 700000) 0 nil])
([nil nil ((228 . 234)) nil (25250 50252 884698 0) 0 nil])
([nil nil ((210 . 215)) nil (25250 50252 884697 200000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -211) (undo-tree-id1840 . -1) (#("l" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -212) (undo-tree-id1841 . -1) (#("c" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -213) (undo-tree-id1842 . -1) (#("e" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -214) (undo-tree-id1843 . -1) 215) nil (25250 50252 884695 0) 0 nil])
([nil nil ((211 . 215)) nil (25250 50252 884690 900000) 0 nil])
([nil nil ((204 . 205)) nil (25250 50252 884690 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 242 . 243) (nil fontified nil 205 . 243) (205 . 243)) nil (25250 50252 884689 100000) 0 nil])
([nil nil ((243 . 244)) nil (25250 50252 884687 900000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -243) (undo-tree-id1839 . -1) 244) nil (25250 50252 884686 800000) 0 nil])
([nil nil ((243 . 245)) nil (25250 50252 884685 0) 0 nil])
([nil nil ((261 . 263)) nil (25250 50252 884684 100000) 0 nil])
([nil nil ((205 . 206)) nil (25250 50252 884683 200000) 0 nil])
([nil nil ((866 . 868)) nil (25250 50252 884682 200000) 0 nil])
([nil nil ((866 . 887)) nil (25250 50252 884681 300000) 0 nil])
([nil nil ((887 . 890)) nil (25250 50252 884680 500000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -884) (undo-tree-id1833 . -1) (#("c" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -885) (undo-tree-id1834 . -1) (#("t" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -886) (undo-tree-id1835 . -1) (#("u" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -887) (undo-tree-id1836 . -1) (#("a" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -888) (undo-tree-id1837 . -1) (#("l" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -889) (undo-tree-id1838 . -1) 890) nil (25250 50252 884677 800000) 0 nil])
([nil nil ((884 . 905)) nil (25250 50252 884671 400000) 0 nil])
([nil nil ((905 . 911)) nil (25250 50252 884670 600000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -910) (undo-tree-id1832 . -1) 911) nil (25250 50252 884669 500000) 0 nil])
([nil nil ((910 . 912)) nil (25250 50252 884667 400000) 0 nil])
([nil nil ((912 . 914)) nil (25250 50252 884666 500000) 0 nil])
([nil nil ((903 . 904)) nil (25250 50252 884665 400000) 0 nil])
([nil nil ((829 . 830)) nil (25250 50252 884664 400000) 0 nil])
([nil nil ((835 . 836)) nil (25250 50252 884663 500000) 0 nil])
([nil nil ((856 . 862)) nil (25250 50252 884662 400000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -860) (undo-tree-id1830 . -1) (#("o" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -861) (undo-tree-id1831 . -1) 862) nil (25250 50252 884660 300000) 0 nil])
([nil nil ((858 . 859)) nil (25250 50252 884653 800000) 0 nil])
([nil nil ((922 . 929)) nil (25250 50252 884651 500000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -927) (undo-tree-id1828 . -1) (#("o" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -928) (undo-tree-id1829 . -1) 929) nil (25250 50252 884636 400000) 0 nil])
([nil nil ((927 . 948)) nil (25250 50252 884633 600000) 0 nil])
([nil nil ((948 . 963)) nil (25250 50252 884632 700000) 0 nil])
([nil nil ((963 . 971)) nil (25250 50252 884631 900000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -970) (undo-tree-id1827 . -1) 971) nil (25250 50252 884630 800000) 0 nil])
([nil nil ((970 . 989)) nil (25250 50252 884627 200000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -987) (undo-tree-id1825 . -1) (#("n" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -988) (undo-tree-id1826 . -1) 989) nil (25250 50252 884625 900000) 0 nil])
([nil nil ((987 . 993)) nil (25250 50252 884623 300000) 0 nil])
([nil nil ((993 . 999)) nil (25250 50252 884622 300000) 0 nil])
([nil nil ((#("," 0 1 (fontified t line-prefix "" wrap-prefix "")) . -991) (undo-tree-id1817 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -992) (undo-tree-id1818 . -1) (#("W" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -993) (undo-tree-id1819 . -1) (#("i" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -994) (undo-tree-id1820 . -1) (#("n" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -995) (undo-tree-id1821 . -1) (#("d" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -996) (undo-tree-id1822 . -1) (#("o" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -997) (undo-tree-id1823 . -1) (#("w" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -998) (undo-tree-id1824 . -1) 999) nil (25250 50252 884619 100000) 0 nil])
([nil nil ((991 . 1002)) nil (25250 50252 884607 400000) 0 nil])
([nil nil ((1002 . 1003)) nil (25250 50252 884605 400000) 0 nil])
([nil nil ((986 . 994)) nil (25250 50252 884603 400000) 0 nil])
([nil nil ((1012 . 1014)) nil (25250 50252 884602 400000) 0 nil])
([nil nil ((1014 . 1035)) nil (25250 50252 884601 300000) 0 nil])
([nil nil ((1025 . 1030)) nil (25250 50252 884599 900000) 0 nil])
([nil nil ((1030 . 1033)) nil (25250 50252 884599 100000) 0 nil])
([nil nil ((1033 . 1047)) nil (25250 50252 884598 100000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t line-prefix "" wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -1044) (undo-tree-id1814 . -1) (#("i" 0 1 (fontified t line-prefix "" wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -1045) (undo-tree-id1815 . -1) (#("t" 0 1 (fontified t line-prefix "" wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -1046) (undo-tree-id1816 . -1) 1047) nil (25250 50252 884594 500000) 0 nil])
([nil nil ((1044 . 1056)) nil (25250 50252 884590 600000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t line-prefix "" wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -1055) (undo-tree-id1813 . -1) 1056) nil (25250 50252 884589 400000) 0 nil])
([nil nil ((1055 . 1056)) nil (25250 50252 884587 700000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t line-prefix "" wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -1055) (undo-tree-id1812 . -1) 1056) nil (25250 50252 884586 600000) 0 nil])
([nil nil ((1055 . 1059)) nil (25250 50252 884584 900000) 0 nil])
([nil nil ((1031 . 1032)) nil (25250 50252 884584 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix "" font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 1032)) nil (25250 50252 884582 800000) 0 nil])
([nil nil ((1059 . 1069)) nil (25250 50252 884581 800000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t line-prefix "" wrap-prefix "" font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -1068) (undo-tree-id1811 . -1) 1069) nil (25250 50252 884580 600000) 0 nil])
([nil nil ((1068 . 1069)) nil (25250 50252 884578 600000) 0 nil])
([nil nil ((1013 . 1014)) nil (25250 50252 884577 800000) 0 nil])
([nil nil ((1013 . 1015)) nil (25250 50252 884576 900000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1013) (undo-tree-id1809 . -1) (#("o" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1014) (undo-tree-id1810 . -1) 1015) nil (25250 50252 884575 600000) 0 nil])
([nil nil ((1013 . 1015)) nil (25250 50252 884573 200000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1014) (undo-tree-id1808 . -1) 1015) nil (25250 50252 884572 0) 0 nil])
([nil nil ((1014 . 1035)) nil (25250 50252 884570 500000) 0 nil])
([nil nil ((1035 . 1043)) nil (25250 50252 884569 700000) 0 nil])
([nil nil ((1043 . 1064)) nil (25250 50252 884568 800000) 0 nil])
([nil nil ((1064 . 1067)) nil (25250 50252 884567 900000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1066) (undo-tree-id1807 . -1) 1067) nil (25250 50252 884566 400000) 0 nil])
([nil nil ((1066 . 1067)) nil (25250 50252 884564 500000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1066) (undo-tree-id1806 . -1) 1067) nil (25250 50252 884563 200000) 0 nil])
([nil nil ((1066 . 1069)) nil (25250 50252 884559 600000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1066) (undo-tree-id1803 . -1) (#("i" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1067) (undo-tree-id1804 . -1) (#("e" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1068) (undo-tree-id1805 . -1) 1069) nil (25250 50252 884558 0) 0 nil])
([nil nil ((1066 . 1070)) nil (25250 50252 884554 700000) 0 nil])
([nil nil ((1139 . 1147)) nil (25250 50252 884553 900000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1146) (undo-tree-id1802 . -1) 1147) nil (25250 50252 884552 900000) 0 nil])
([nil nil ((1146 . 1149)) nil (25250 50252 884551 200000) 0 nil])
([nil nil ((1149 . 1163)) nil (25250 50252 884550 400000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1162) (undo-tree-id1801 . -1) 1163) nil (25250 50252 884549 100000) 0 nil])
([nil nil ((1162 . 1163)) nil (25250 50252 884547 400000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1158) (undo-tree-id1796 . -1) (#("n" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1159) (undo-tree-id1797 . -1) (#("d" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1160) (undo-tree-id1798 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1161) (undo-tree-id1799 . -1) (#("~" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1162) (undo-tree-id1800 . -1) 1163) nil (25250 50252 884545 400000) 0 nil])
([nil nil ((1158 . 1161)) nil (25250 50252 884539 900000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1160) (undo-tree-id1795 . -1) 1161) nil (25250 50252 884538 900000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1158) (undo-tree-id1793 . -1) (#("-" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1159) (undo-tree-id1794 . -1) 1160) nil (25250 50252 884536 900000) 0 nil])
([nil nil ((1158 . 1164)) nil (25250 50252 884534 400000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1162) (undo-tree-id1791 . -1) (#("m" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1163) (undo-tree-id1792 . -1) 1164) nil (25250 50252 884533 200000) 0 nil])
([nil nil ((1162 . 1163)) nil (25250 50252 884530 700000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1162) (undo-tree-id1790 . -1) 1163) nil (25250 50252 884529 600000) 0 nil])
([nil nil ((1162 . 1167)) nil (25250 50252 884527 800000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1165) (undo-tree-id1788 . -1) (#("`" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1166) (undo-tree-id1789 . -1) 1167) nil (25250 50252 884526 100000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1164) (undo-tree-id1787 . -1) 1165) nil (25250 50252 884523 300000) 0 nil])
([nil nil ((1164 . 1185)) nil (25250 50252 884521 400000) 0 nil])
([nil nil ((1185 . 1186)) nil (25250 50252 884520 500000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1185) (undo-tree-id1786 . -1) 1186) nil (25250 50252 884519 300000) 0 nil])
([nil nil ((1185 . 1200)) nil (25250 50252 884517 600000) 0 nil])
([nil nil ((1200 . 1211)) nil (25250 50252 884516 700000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1210) (undo-tree-id1785 . -1) 1211) nil (25250 50252 884515 700000) 0 nil])
([nil nil ((1210 . 1211)) nil (25250 50252 884512 400000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1210) (undo-tree-id1784 . -1) 1211) nil (25250 50252 884511 400000) 0 nil])
([nil nil ((1210 . 1214)) nil (25250 50252 884509 800000) 0 nil])
([nil nil ((1214 . 1226)) nil (25250 50252 884508 900000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1224) (undo-tree-id1782 . -1) (#("o" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1225) (undo-tree-id1783 . -1) 1226) nil (25250 50252 884507 500000) 0 nil])
([nil nil ((1224 . 1245)) nil (25250 50252 884504 900000) 0 nil])
([nil nil ((1245 . 1249)) nil (25250 50252 884504 100000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1245) (undo-tree-id1778 . -1) (#("u" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1246) (undo-tree-id1779 . -1) (#("t" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1247) (undo-tree-id1780 . -1) (#("e" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1248) (undo-tree-id1781 . -1) 1249) nil (25250 50252 884502 500000) 0 nil])
([nil nil ((1245 . 1250)) nil (25250 50252 884498 400000) 0 nil])
([nil nil ((1250 . 1256)) nil (25250 50252 884497 700000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1255) (undo-tree-id1777 . -1) 1256) nil (25250 50252 884496 600000) 0 nil])
([nil nil ((1255 . 1269)) nil (25250 50252 884494 900000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1268) (undo-tree-id1776 . -1) 1269) nil (25250 50252 884493 800000) 0 nil])
([nil nil ((1268 . 1277)) nil (25250 50252 884492 100000) 0 nil])
([nil nil ((1277 . 1278)) nil (25250 50252 884491 200000) 0 nil])
([nil nil ((1156 . 1171)) nil (25250 50252 884490 400000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1170) (undo-tree-id1775 . -1) 1171) nil (25250 50252 884489 300000) 0 nil])
([nil nil ((1170 . 1191)) nil (25250 50252 884487 600000) 0 nil])
([nil nil ((1191 . 1195)) nil (25250 50252 884486 700000) 0 nil])
([nil nil ((1195 . 1200)) nil (25250 50252 884485 700000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1195) (undo-tree-id1770 . -1) (#("t" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1196) (undo-tree-id1771 . -1) (#("a" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1197) (undo-tree-id1772 . -1) (#("n" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1198) (undo-tree-id1773 . -1) (#("d" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1199) (undo-tree-id1774 . -1) 1200) nil (25250 50252 884483 700000) 0 nil])
([nil nil ((1195 . 1205)) nil (25250 50252 884478 200000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1201) (undo-tree-id1766 . -1) (#("h" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1202) (undo-tree-id1767 . -1) (#("o" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1203) (undo-tree-id1768 . -1) (#("u" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1204) (undo-tree-id1769 . -1) 1205) nil (25250 50252 884476 200000) 0 nil])
([nil nil ((1201 . 1214)) nil (25250 50252 884471 700000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1211) (undo-tree-id1763 . -1) (#("p" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1212) (undo-tree-id1764 . -1) (#("e" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1213) (undo-tree-id1765 . -1) 1214) nil (25250 50252 884470 100000) 0 nil])
([nil nil ((1211 . 1232)) nil (25250 50252 884422 300000) 0 nil])
([nil nil ((1232 . 1237)) nil (25250 50252 884421 200000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1234) (undo-tree-id1760 . -1) (#("p" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1235) (undo-tree-id1761 . -1) (#("s" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1236) (undo-tree-id1762 . -1) 1237) nil (25250 50252 884419 600000) 0 nil])
([nil nil ((1234 . 1238)) nil (25250 50252 884415 800000) 0 nil])
([nil nil ((1238 . 1244)) nil (25250 50252 884414 300000) 0 nil])
([nil nil ((1245 . 1249)) nil (25250 50252 884413 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1245) (undo-tree-id1756 . -1) (#("-" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1246) (undo-tree-id1757 . -1) (#("r" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1247) (undo-tree-id1758 . -1) (#("m" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1248) (undo-tree-id1759 . -1) 1249) nil (25250 50252 884411 100000) 0 nil])
([nil nil ((1253 . 1261)) nil (25250 50252 884406 400000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1256) (undo-tree-id1751 . -1) (#("a" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1257) (undo-tree-id1752 . -1) (#("s" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1258) (undo-tree-id1753 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1259) (undo-tree-id1754 . -1) (#("c" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1260) (undo-tree-id1755 . -1) 1261) nil (25250 50252 884404 0) 0 nil])
([nil nil ((1256 . 1277)) nil (25250 50252 884398 900000) 0 nil])
([nil nil ((1277 . 1286)) nil (25250 50252 884397 400000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1284) (undo-tree-id1749 . -1) (#("d" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1285) (undo-tree-id1750 . -1) 1286) nil (25250 50252 884396 0) 0 nil])
([nil nil ((1284 . 1285)) nil (25250 50252 884393 200000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1283) (undo-tree-id1747 . -1) (#("a" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1284) (undo-tree-id1748 . -1) 1285) nil (25250 50252 884391 500000) 0 nil])
([nil nil ((1283 . 1304)) nil (25250 50252 884388 400000) 0 nil])
([nil nil ((1304 . 1309)) nil (25250 50252 884387 300000) 0 nil])
([nil nil ((1010 . 1018)) nil (25250 50252 884386 200000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1016) (undo-tree-id1745 . -1) (#("c" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1017) (undo-tree-id1746 . -1) 1018) nil (25250 50252 884384 600000) 0 nil])
([nil nil ((1016 . 1018)) nil (25250 50252 884381 800000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1016) (undo-tree-id1743 . -1) (#("c" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1017) (undo-tree-id1744 . -1) 1018) nil (25250 50252 884380 300000) 0 nil])
([nil nil ((1016 . 1021)) nil (25250 50252 884367 100000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1015) (undo-tree-id1742 . -1) 1016) nil (25250 50252 884363 700000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1000) (undo-tree-id1740 . -1) (#("r" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -1001) (undo-tree-id1741 . -1) 1002) nil (25250 50252 884358 600000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix "")) . 1000)) nil (25250 50252 884344 400000) 0 nil])
([nil nil ((999 . 1000)) nil (25250 50252 884343 400000) 0 nil])
([nil nil ((#(":ID: 22f1e2e5-fe89-4a17-a976-ee38c1650cd3" 0 1 (fontified nil line-prefix "" wrap-prefix "") 1 3 (fontified nil line-prefix "" wrap-prefix "") 3 4 (fontified nil line-prefix "" wrap-prefix "") 4 5 (fontified nil line-prefix "" wrap-prefix "") 5 41 (fontified nil line-prefix "" wrap-prefix "")) . -14) (14 . 102) (14 . 15) (1 . 20) 1430) nil (25250 50252 884340 700000) 0 nil])
([nil current ((1497 . 1498)) nil (25250 50252 884334 900000) 0 nil])
nil
