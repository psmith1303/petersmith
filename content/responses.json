[
  {
    "author": {
      "name": "Evgeny Kuznetsov",
      "photo": "https://webmention.io/avatar/evgenykuznetsov.org/3b455ea772635831bb966a96959ad5acc7a16b65e79464111c4ed0e6d6db66a4.jpg",
      "type": "card",
      "url": "https://evgenykuznetsov.org"
    },
    "content": {
      "html": "<p>To accomodate a complex layout like this, <code>webmention.io-backup</code> would have to parse the config file and look up the <code>date</code> field in all the content files' front matter to figure out which directory corresponds to which website page (basically, the way Hugo does it when it creates the pages in the first place). Programming all this is not impossible, of course, but it would be quite an endeavor that I’m not sure I want to embark on, especially considering the fact that one’s <code>config.toml</code> may contain something along the lines of</p>\n<pre><code><span>[</span><span>frontmatter</span><span>]</span>\n  <span>date</span> <span>=</span> <span>[</span><span>':git'</span><span>,</span> <span>'lastmod'</span><span>]</span>\n</code></pre><p>I don’t want to open that can of worms!</p>\n<blockquote>\n<p>These ‘mentions’ on my side aren’t being threaded back to the original post.</p>\n</blockquote>\n<p>Beware, this is <a href=\"https://indieweb.org/Salmention\">Salmention</a> territory you’re stepping into. There be dragons.</p>",
      "text": "To accomodate a complex layout like this, webmention.io-backup would have to parse the config file and look up the date field in all the content files' front matter to figure out which directory corresponds to which website page (basically, the way Hugo does it when it creates the pages in the first place). Programming all this is not impossible, of course, but it would be quite an endeavor that I’m not sure I want to embark on, especially considering the fact that one’s config.toml may contain something along the lines of\n[frontmatter]\n  date = [':git', 'lastmod']\nI don’t want to open that can of worms!\n\nThese ‘mentions’ on my side aren’t being threaded back to the original post.\n\nBeware, this is Salmention territory you’re stepping into. There be dragons."
    },
    "in_reply_to": "https://petersmith.org/replies/2022/reply-02Tue155113/",
    "published": "2022-01-11T15:28:55+03:00",
    "rels": {
      "canonical": "https://evgenykuznetsov.org/en/reactions/2022/re-011120357/"
    },
    "type": "entry",
    "url": "https://evgenykuznetsov.org/en/reactions/2022/re-011120357/",
    "wm_id": 1329809,
    "wm_private": false,
    "wm_property": "in-reply-to",
    "wm_received": "2022-01-11T12:31:10Z",
    "wm_source": "https://evgenykuznetsov.org/en/reactions/2022/re-011120357/",
    "wm_target": "https://petersmith.org/replies/2022/reply-02Tue155113/"
  },
  {
    "author": {
      "name": "Evgeny Kuznetsov",
      "photo": "https://webmention.io/avatar/evgenykuznetsov.org/3b455ea772635831bb966a96959ad5acc7a16b65e79464111c4ed0e6d6db66a4.jpg",
      "type": "card",
      "url": "https://evgenykuznetsov.org"
    },
    "content": {
      "html": "<p>I see.</p>\n<p>The reason <code>webmention.io-backup</code> is failing to correctly work your directory structure is that it expects the directory structure to mirror the URL path, that is, it expects <code>petersmith.org/blog/2022/01/10/third-steps-to-indieweb/</code> to reside in <code>content/blog/2022/01/10/third-steps-to-indieweb/</code>. In your setup, that directory doesn’t exist; instead, <code>content/blog/20220110-third-steps-to-indieweb</code> is used. I suppose, you are using <code>permalinks</code> <a href=\"https://gohugo.io/content-management/urls/\">config option</a> to achieve that? If so, that’s quite a problem, because in this case <code>webmention.io-backup</code> can not really infer the directory name, since the URL is formed based on the <code>date</code> parameter and not based on the first 8 digits of the directory name, right?</p>\n<p>I mean, I can make a patch for <code>webmention.io-backup</code> to work on your directory structure, it’s fairly trivial. But I’d be reluctant to incorporate it in the main branch, because it wouldn’t be flexible at all.</p>",
      "text": "I see.\nThe reason webmention.io-backup is failing to correctly work your directory structure is that it expects the directory structure to mirror the URL path, that is, it expects petersmith.org/blog/2022/01/10/third-steps-to-indieweb/ to reside in content/blog/2022/01/10/third-steps-to-indieweb/. In your setup, that directory doesn’t exist; instead, content/blog/20220110-third-steps-to-indieweb is used. I suppose, you are using permalinks config option to achieve that? If so, that’s quite a problem, because in this case webmention.io-backup can not really infer the directory name, since the URL is formed based on the date parameter and not based on the first 8 digits of the directory name, right?\nI mean, I can make a patch for webmention.io-backup to work on your directory structure, it’s fairly trivial. But I’d be reluctant to incorporate it in the main branch, because it wouldn’t be flexible at all."
    },
    "in_reply_to": "https://petersmith.org/mentions/2022/2022/reply-02Mon191605/",
    "published": "2022-01-10T20:47:21+03:00",
    "rels": {
      "canonical": "https://evgenykuznetsov.org/en/reactions/2022/re-010174726/"
    },
    "type": "entry",
    "url": "https://evgenykuznetsov.org/en/reactions/2022/re-010174726/",
    "wm_id": 1329330,
    "wm_private": false,
    "wm_property": "in-reply-to",
    "wm_received": "2022-01-10T18:00:47Z",
    "wm_source": "https://evgenykuznetsov.org/en/reactions/2022/re-010174726/",
    "wm_target": "https://petersmith.org/mentions/2022/01/10/reply-to-https-evgenykuznetsov-org-en-reactions-2022-re-010053442/"
  },
  {
    "author": {
      "name": "",
      "photo": "",
      "type": "card",
      "url": ""
    },
    "content": {
      "html": "<p>\nAfter <a href=\"https://petersmith.org/blog/2021/10/07/first-steps-to-indieweb/\">my first steps to IndieWeb</a>, I got a really helpful message from <a href=\"https://robbinespu.gitlab.io/\">Robbi Nespu</a>. Alas, I've not (yet) got webmentions working in any real way, and the page he commented on had a broken URL (all my problems, not Robbi's). </p>\n<p>\nHe said:</p>\n<blockquote>\n<p>Hello Peter Smith, How going? I also using Hugo, the getting webmention response working is easier if using a javascript called as <a href=\"https://github.com/PlaidWeb/webmention.js/\">PlaidWeb/webmention.js</a></p>\n<p>\nSome tips from my experience</p>\n<ul><li>\n<p>Setup the <code>h-card</code> because it important and needed for indieAuth (to use some external services such as <a href=\"https://webmention.io\"></a><a href=\"https://webmention.io\">https://webmention.io</a></p>\n</li>\n<li>\n<p>You may use <a href=\"https://xray.p3k.io\"></a><a href=\"https://xray.p3k.io\">https://xray.p3k.io</a> to inspect if the HTML are parse correctly, you can submit the URL or just paste the raw HTML (even with <code>localhost</code> / <code>127.0.0.1</code> addressed inside the source code, it working very well). It save my time during debugging.</p>\n</li>\n<li>\n<p>I also use <a href=\"https://telegraph.p3k.io\"></a><a href=\"https://telegraph.p3k.io\">https://telegraph.p3k.io</a> to preview (check) if all link inside <code>h-entry</code> support webmention. You also can manually send webmention by give a source and target from there.</p>\n</li>\n<li>\n<p>Lastly, validate published web using <a href=\"https://indiewebify.me/\">https://indiewebify.me/</a>  get your website until level 3.</p>\n</li>\n</ul><p>Hope this helpful 😀</p>\n</blockquote>\n<p>\nSo, what's my progress so far? (beside's Robbi's smiley face emoji not displaying correctly in emacs)</p>\n\n<h5>\nLevel 1: Become a citizen of the IndieWeb\n</h5>\n\n<ol><li>\n<p>Get your own domain name: Done. Many years ago.</p>\n</li>\n<li>\n<p>Set up Web Sign In: That was easy. Or it was until I decided to not use <code>&lt;link rel=\"me\" href= ..../&gt;</code>. And once I had that working I too the time to break it again.</p>\n</li>\n</ol>\n\n\n<h5>\nLevel 2: Publishing on the IndieWeb\n</h5>\n\n<ol><li>\n<p>Check your homepage h-card: I really should read the specs more closely. I bashed my head against a brick wall for a while with this. Even though I used bits of HTML from <a href=\"https://aaronparecki.com/\">Aaron Parecki</a> and from <a href=\"https://boffosocko.com/\">Chris Aldrich</a>, it still took too much time.</p>\n</li>\n<li>\n<p>Check your posts are marked up with <code>-h-entry</code>: Not so hard, although I have had to tweak the layout of may pages somewhat. Categories, aren't elegant yet.</p>\n</li>\n</ol>\n\n\n<h5>\nLevel 3: Add the ability to send Webmentions to other IndieWeb sites\n</h5>\n\n<p>This is a work in progress. I can do it manually using, say, <a></a><a href=\"https://telegraph.p3k.io\">https://telegraph.p3k.io</a> but I've yet to automate things. The bigger challenge is getting other people's Webmentions to appear on my site.</p>",
      "text": "After my first steps to IndieWeb, I got a really helpful message from Robbi Nespu. Alas, I've not (yet) got webmentions working in any real way, and the page he commented on had a broken URL (all my problems, not Robbi's). \n\nHe said:\n\nHello Peter Smith, How going? I also using Hugo, the getting webmention response working is easier if using a javascript called as PlaidWeb/webmention.js\n\nSome tips from my experience\n\nSetup the h-card because it important and needed for indieAuth (to use some external services such as https://webmention.io\n\n\nYou may use https://xray.p3k.io to inspect if the HTML are parse correctly, you can submit the URL or just paste the raw HTML (even with localhost / 127.0.0.1 addressed inside the source code, it working very well). It save my time during debugging.\n\n\nI also use https://telegraph.p3k.io to preview (check) if all link inside h-entry support webmention. You also can manually send webmention by give a source and target from there.\n\n\nLastly, validate published web using https://indiewebify.me/  get your website until level 3.\n\nHope this helpful 😀\n\n\nSo, what's my progress so far? (beside's Robbi's smiley face emoji not displaying correctly in emacs)\n\n\nLevel 1: Become a citizen of the IndieWeb\n\n\n\nGet your own domain name: Done. Many years ago.\n\n\nSet up Web Sign In: That was easy. Or it was until I decided to not use <link rel=\"me\" href= ..../>. And once I had that working I too the time to break it again.\n\n\nLevel 2: Publishing on the IndieWeb\n\n\n\nCheck your homepage h-card: I really should read the specs more closely. I bashed my head against a brick wall for a while with this. Even though I used bits of HTML from Aaron Parecki and from Chris Aldrich, it still took too much time.\n\n\nCheck your posts are marked up with -h-entry: Not so hard, although I have had to tweak the layout of may pages somewhat. Categories, aren't elegant yet.\n\n\nLevel 3: Add the ability to send Webmentions to other IndieWeb sites\n\n\nThis is a work in progress. I can do it manually using, say, https://telegraph.p3k.io but I've yet to automate things. The bigger challenge is getting other people's Webmentions to appear on my site."
    },
    "mention_of": "https://petersmith.org/blog/2021/10/07/first-steps-to-indieweb/",
    "name": "Second Steps in IndieWeb",
    "published": "2021-10-14T18:53:21+13:00",
    "rels": {
      "canonical": "https://petersmith.org/blog/2021/10/14/second-steps-in-indieweb/"
    },
    "type": "entry",
    "url": "https://petersmith.org/blog/2021/10/14/second-steps-in-indieweb/",
    "wm_id": 1288974,
    "wm_private": false,
    "wm_property": "mention-of",
    "wm_received": "2021-10-14T08:35:51Z",
    "wm_source": "https://petersmith.org/blog/2021/10/14/second-steps-in-indieweb/",
    "wm_target": "https://petersmith.org/blog/2021/10/07/first-steps-to-indieweb/"
  },
  {
    "author": {
      "name": "Robbi Nespu",
      "photo": "https://webmention.io/avatar/robbinespu.gitlab.io/6e26274b5791d929b75d7450e7a5c1f9e0d19134bb0c641705f0a1e41742e4d2.png",
      "type": "card",
      "url": "https://robbinespu.gitlab.io/"
    },
    "content": {
      "html": "<p>Hello Peter Smith, How going? I also using Hugo, the getting webmention response working is easier if using a javascript called as\n<a href=\"https://github.com/PlaidWeb/webmention.js/\">\nPlaidWeb/webmention.js\n</a>\n. Some tips from my experience :</p>\n<ul><li>Setup the <code>h-card</code> because it important and needed for indieAuth (to use some external services such as\n<a href=\"https://webmention.io\">\nhttps://webmention.io\n</a>\n)</li>\n<li>You may use\n<a href=\"https://xray.p3k.io\">\nhttps://xray.p3k.io\n</a>\nto inspect if the HTML are parse correctly, you can submit the URL or just paste the raw HTML (even with <code>localhost</code> / <code>127.0.0.1</code> addressed inside the source code, it working very well). It save my time during debugging.</li>\n<li>I also use\n<a href=\"https://telegraph.p3k.io\">\nhttps://telegraph.p3k.io\n</a>\nto preview (check) if all link inside <code>h-entry</code> support webmention. You also can manually send webmention by give a source and target from there.</li>\n<li>Lastly, validate published web using\n<a href=\"https://indiewebify.me/\">\nhttps://indiewebify.me/\n</a>\nget your website until level 3.</li>\n</ul><p>Hope this helpful 😀</p>",
      "text": "Hello Peter Smith, How going? I also using Hugo, the getting webmention response working is easier if using a javascript called as\n\nPlaidWeb/webmention.js\n\n. Some tips from my experience :\nSetup the h-card because it important and needed for indieAuth (to use some external services such as\n\nhttps://webmention.io\n\n)\nYou may use\n\nhttps://xray.p3k.io\n\nto inspect if the HTML are parse correctly, you can submit the URL or just paste the raw HTML (even with localhost / 127.0.0.1 addressed inside the source code, it working very well). It save my time during debugging.\nI also use\n\nhttps://telegraph.p3k.io\n\nto preview (check) if all link inside h-entry support webmention. You also can manually send webmention by give a source and target from there.\nLastly, validate published web using\n\nhttps://indiewebify.me/\n\nget your website until level 3.\nHope this helpful 😀"
    },
    "in_reply_to": "https://petersmith.org/blog/2021/10/10/20211010-first-steps-to-indieweb/",
    "name": "↩️ Reply to:\nhttps://petersmith.org/blog/2021/10/10/20211010-first-steps-to-indieweb/",
    "published": "2021-10-10T17:03:23+08:00",
    "type": "entry",
    "url": "https://robbinespu.gitlab.io/indieweb/211010050323/",
    "wm_id": 1285807,
    "wm_private": false,
    "wm_property": "in-reply-to",
    "wm_received": "2021-10-10T11:35:46Z",
    "wm_source": "https://robbinespu.gitlab.io/indieweb/211010050323/",
    "wm_target": "https://petersmith.org/blog/2021/10/10/20211010-first-steps-to-indieweb/"
  },
  {
    "author": {
      "name": "robbinespu ",
      "photo": "https://webmention.io/avatar/pbs.twimg.com/ab6af50adf89b1416f07e3f8662c3ee5d57b4efb74b365ec92c1058b80e4a1bb.jpg",
      "type": "card",
      "url": "https://twitter.com/RobbiNespu"
    },
    "content": {
      "html": "📝 New post:  ↩️ Reply to: <a href=\"https://petersmith.org/webmentions/likes/2022/like-202220221213-124654/\">petersmith.org/webmentions/li…</a> -  ➡️ <a href=\"https://journal.robbi.my/posts/221218071647/\">journal.robbi.my/posts/22121807…</a>",
      "text": "📝 New post:  ↩️ Reply to: petersmith.org/webmentions/li… -  ➡️ journal.robbi.my/posts/22121807…"
    },
    "mention_of": "https://petersmith.org/webmentions/likes/2022/like-202220221213-124654/",
    "published": "2022-12-18T12:06:55+00:00",
    "type": "entry",
    "url": "https://twitter.com/RobbiNespu/status/1604448117360844805",
    "wm_id": 1583266,
    "wm_private": false,
    "wm_property": "mention-of",
    "wm_received": "2022-12-18T12:21:19Z",
    "wm_source": "https://brid.gy/post/twitter/robbinespu/1604448117360844805",
    "wm_target": "https://petersmith.org/webmentions/likes/2022/like-202220221213-124654/"
  },
  {
    "author": {
      "name": "Robbi Nespu",
      "photo": "https://webmention.io/avatar/journal.robbi.my/6e26274b5791d929b75d7450e7a5c1f9e0d19134bb0c641705f0a1e41742e4d2.png",
      "type": "card",
      "url": "https://journal.robbi.my/"
    },
    "content": {
      "html": "<p>Previously, I always send my URL to the Wayback Machine to archive it. But now, I have a better way to do it. I use the\n<a href=\"https://docs.gitlab.com/ee/ci/\">Gitlab CI/CD</a>\nservice to send my URL to the Wayback Machine. It is a free service and it is very easy to use. I just need to add a few lines of code to my Hugo build script.</p><p>Here is an example:</p><p>First, I need to add some python script called\n<a href=\"https://journal.robbi.my/posts/221218071647/\">archivenow</a>\nduring build stage.</p><pre style=\"color:#f8f8f2;background-color:#272822;\"><code><span><span>pages:\n</span></span><span><span>  stage: deploy\n</span></span><span><span>  script:\n</span></span><span><span>    - hugo --verbose --minify --enableGitInfo\n</span></span><span><span>    - git clone git@github.com:oduwsdl/archivenow.git\n</span></span><span><span>    - cd archivenow\n</span></span><span><span>    - pip install -r requirements.txt\n</span></span><span><span>    - pip install ./\n</span></span><span><span>    - cd ..\n</span></span><span><span>    - ./submit10url2backway.sh\n</span></span><span><span>    - echo <span style=\"color:#e6db74;\">'Build is complete and feed submited to web archieved..!!!'</span>\n</span></span></code></pre><p>Then, I need to add “<strong>submit10url2backway</strong>” script to send my URL to the Wayback Machine. Here is the script:</p><pre style=\"color:#f8f8f2;background-color:#272822;\"><code><span><span><span style=\"color:#75715e;\">#!/usr/bin/env bash\n</span></span></span><span><span><span style=\"color:#75715e;\"></span><span style=\"color:#75715e;\"># Copyright Robbi Nespu &lt;contact@robbi.my&gt; , 2022</span>\n</span></span><span><span><span style=\"color:#75715e;\"># License: MIT</span>\n</span></span><span><span>\n</span></span><span><span><span style=\"color:#75715e;\"># This script is used to archive my website to the Internet Archive.</span>\n</span></span><span><span>\n</span></span><span><span><span style=\"color:#75715e;\"># Fetch RSS and read the first 10 URLs send send it to the Wayback Machine</span>\n</span></span><span><span>urls1<span style=\"color:#f92672;\">=</span><span style=\"color:#66d9ef;\">$(</span>curl -s https://robbinespu.gitlab.io/index.xml | grep <span style=\"color:#e6db74;\">\"&lt;link&gt;\"</span> | head -n <span style=\"color:#ae81ff;\">10</span> | awk -F<span style=\"color:#e6db74;\">\"&lt;guid&gt;\"</span> <span style=\"color:#e6db74;\">'{print $2} '</span> | awk -F<span style=\"color:#e6db74;\">\"&lt;/guid&gt;\"</span> <span style=\"color:#e6db74;\">'{print $1}'</span><span style=\"color:#66d9ef;\">)</span>\n</span></span><span><span><span style=\"color:#66d9ef;\">for</span> i in $urls1\n</span></span><span><span>    <span style=\"color:#66d9ef;\">do</span>  archivenow --ia --is --mg <span style=\"color:#e6db74;\">\"</span>$i<span style=\"color:#e6db74;\">\"</span>\n</span></span><span><span><span style=\"color:#66d9ef;\">done</span>\n</span></span><span><span>\n</span></span><span><span><span style=\"color:#75715e;\"># Same like previous but for the IndieWeb RSS</span>\n</span></span><span><span>urls2<span style=\"color:#f92672;\">=</span><span style=\"color:#66d9ef;\">$(</span>curl -s https://robbinespu.gitlab.io/indieweb/index.xml | grep <span style=\"color:#e6db74;\">\"&lt;link&gt;\"</span> | head -n <span style=\"color:#ae81ff;\">10</span> | awk -F<span style=\"color:#e6db74;\">\"&lt;guid&gt;\"</span> <span style=\"color:#e6db74;\">'{print $2} '</span> | awk -F<span style=\"color:#e6db74;\">\"&lt;/guid&gt;\"</span> <span style=\"color:#e6db74;\">'{print $1}'</span><span style=\"color:#66d9ef;\">)</span>\n</span></span><span><span><span style=\"color:#66d9ef;\">for</span> i in $urls2\n</span></span><span><span>    <span style=\"color:#66d9ef;\">do</span>  archivenow --ia --is --mg <span style=\"color:#e6db74;\">\"</span>$i<span style=\"color:#e6db74;\">\"</span>\n</span></span><span><span><span style=\"color:#66d9ef;\">done</span>\n</span></span><span><span>\n</span></span><span><span><span style=\"color:#75715e;\"># Archive the main website</span>\n</span></span><span><span>archivenow --ia --is --mg <span style=\"color:#e6db74;\">\"https://robbinespu.gitlab.io/\"</span>\n</span></span><span><span>echo <span style=\"color:#e6db74;\">\"Done!\"</span>\n</span></span></code></pre><p>But I have turn off / comment out the script since a year ago because I don’t want to archive my website too often (because I added a webhook to execute CI/CD when received\n<a href=\"https://github.com/aaronpk/webmention.io/blob/45a06629e59d56efdba1ce39936e61b81fc92d97/views/webhooks.erb\">payload from webmention</a>\n).</p><p>Plus this tricks only work for existing old post, the new post not being archived yet because pipeline still running and it the “artifacts” still un-publish.</p><p>I only want to archive it when I have a new post. So, I will archive it manually 😊</p>",
      "text": "Previously, I always send my URL to the Wayback Machine to archive it. But now, I have a better way to do it. I use the\nGitlab CI/CD\nservice to send my URL to the Wayback Machine. It is a free service and it is very easy to use. I just need to add a few lines of code to my Hugo build script.Here is an example:First, I need to add some python script called\narchivenow\nduring build stage.pages:\n  stage: deploy\n  script:\n    - hugo --verbose --minify --enableGitInfo\n    - git clone git@github.com:oduwsdl/archivenow.git\n    - cd archivenow\n    - pip install -r requirements.txt\n    - pip install ./\n    - cd ..\n    - ./submit10url2backway.sh\n    - echo 'Build is complete and feed submited to web archieved..!!!'\nThen, I need to add “submit10url2backway” script to send my URL to the Wayback Machine. Here is the script:#!/usr/bin/env bash\n# Copyright Robbi Nespu <contact@robbi.my> , 2022\n# License: MIT\n\n# This script is used to archive my website to the Internet Archive.\n\n# Fetch RSS and read the first 10 URLs send send it to the Wayback Machine\nurls1=$(curl -s https://robbinespu.gitlab.io/index.xml | grep \"<link>\" | head -n 10 | awk -F\"<guid>\" '{print $2} ' | awk -F\"</guid>\" '{print $1}')\nfor i in $urls1\n    do  archivenow --ia --is --mg \"$i\"\ndone\n\n# Same like previous but for the IndieWeb RSS\nurls2=$(curl -s https://robbinespu.gitlab.io/indieweb/index.xml | grep \"<link>\" | head -n 10 | awk -F\"<guid>\" '{print $2} ' | awk -F\"</guid>\" '{print $1}')\nfor i in $urls2\n    do  archivenow --ia --is --mg \"$i\"\ndone\n\n# Archive the main website\narchivenow --ia --is --mg \"https://robbinespu.gitlab.io/\"\necho \"Done!\"\nBut I have turn off / comment out the script since a year ago because I don’t want to archive my website too often (because I added a webhook to execute CI/CD when received\npayload from webmention\n).Plus this tricks only work for existing old post, the new post not being archived yet because pipeline still running and it the “artifacts” still un-publish.I only want to archive it when I have a new post. So, I will archive it manually 😊"
    },
    "in_reply_to": "https://petersmith.org/webmentions/likes/2022/like-202220221213-124654/",
    "name": "↩️ Reply to: https://petersmith.org/webmentions/likes/2022/like-202220221213-124654/",
    "published": "2022-12-18T19:16:47",
    "rels": {
      "canonical": "https://journal.robbi.my/posts/221218071647/"
    },
    "type": "entry",
    "url": "https://journal.robbi.my/posts/221218071647/",
    "wm_id": 1583263,
    "wm_private": false,
    "wm_property": "in-reply-to",
    "wm_received": "2022-12-18T12:06:12Z",
    "wm_source": "https://journal.robbi.my/posts/221218071647/",
    "wm_target": "https://petersmith.org/webmentions/likes/2022/like-202220221213-124654/"
  },
  {
    "author": {
      "name": "robbinespu ",
      "photo": "https://webmention.io/avatar/pbs.twimg.com/ab6af50adf89b1416f07e3f8662c3ee5d57b4efb74b365ec92c1058b80e4a1bb.jpg",
      "type": "card",
      "url": "https://twitter.com/RobbiNespu"
    },
    "content": {
      "html": "📝 New post:  ↩️ Reply to: <a href=\"https://petersmith.org/webmentions/likes/2022/like-202220221213-124654/\">petersmith.org/webmentions/li…</a> -  ➡️ <a href=\"https://journal.robbi.my/notes/221218071647/\">journal.robbi.my/notes/22121807…</a>",
      "text": "📝 New post:  ↩️ Reply to: petersmith.org/webmentions/li… -  ➡️ journal.robbi.my/notes/22121807…"
    },
    "mention_of": "https://petersmith.org/webmentions/likes/2022/like-202220221213-124654/",
    "published": "2022-12-18T18:37:40+00:00",
    "type": "entry",
    "url": "https://twitter.com/RobbiNespu/status/1604546453375967233",
    "wm_id": 1583456,
    "wm_private": false,
    "wm_property": "mention-of",
    "wm_received": "2022-12-18T19:50:27Z",
    "wm_source": "https://brid.gy/post/twitter/robbinespu/1604546453375967233",
    "wm_target": "https://petersmith.org/webmentions/likes/2022/like-202220221213-124654/"
  },
  {
    "author": {
      "name": "Robbi Nespu",
      "photo": "https://webmention.io/avatar/journal.robbi.my/6e26274b5791d929b75d7450e7a5c1f9e0d19134bb0c641705f0a1e41742e4d2.png",
      "type": "card",
      "url": "https://journal.robbi.my/"
    },
    "content": {
      "html": "<p>Previously, I always send my URL to the Wayback Machine to archive it. But now, I have a better way to do it. I use the\n<a href=\"https://docs.gitlab.com/ee/ci/\">Gitlab CI/CD</a>\nservice to send my URL to the Wayback Machine. It is a free service and it is very easy to use. I just need to add a few lines of code to my Hugo build script.</p><p>Here is an example:</p><p>First, I need to add some python script called\n<a href=\"https://github.com/oduwsdl/archivenow\">archivenow</a>\nduring build stage.</p><pre style=\"color:#f8f8f2;background-color:#272822;\"><code><span><span>pages:\n</span></span><span><span>  stage: deploy\n</span></span><span><span>  script:\n</span></span><span><span>    - hugo --verbose --minify --enableGitInfo\n</span></span><span><span>    - git clone git@github.com:oduwsdl/archivenow.git\n</span></span><span><span>    - cd archivenow\n</span></span><span><span>    - pip install -r requirements.txt\n</span></span><span><span>    - pip install ./\n</span></span><span><span>    - cd ..\n</span></span><span><span>    - ./submit10url2backway.sh\n</span></span><span><span>    - echo <span style=\"color:#e6db74;\">'Build is complete and feed submited to web archieved..!!!'</span>\n</span></span></code></pre><p>Then, I need to add “<strong>submit10url2backway</strong>” script to send my URL to the Wayback Machine. Here is the script:</p><pre style=\"color:#f8f8f2;background-color:#272822;\"><code><span><span><span style=\"color:#75715e;\">#!/usr/bin/env bash\n</span></span></span><span><span><span style=\"color:#75715e;\"></span><span style=\"color:#75715e;\"># Copyright Robbi Nespu &lt;contact@robbi.my&gt; , 2022</span>\n</span></span><span><span><span style=\"color:#75715e;\"># License: MIT</span>\n</span></span><span><span>\n</span></span><span><span><span style=\"color:#75715e;\"># This script is used to archive my website to the Internet Archive.</span>\n</span></span><span><span>\n</span></span><span><span><span style=\"color:#75715e;\"># Fetch RSS and read the first 10 URLs send send it to the Wayback Machine</span>\n</span></span><span><span>urls1<span style=\"color:#f92672;\">=</span><span style=\"color:#66d9ef;\">$(</span>curl -s https://robbinespu.gitlab.io/index.xml | grep <span style=\"color:#e6db74;\">\"&lt;link&gt;\"</span> | head -n <span style=\"color:#ae81ff;\">10</span> | awk -F<span style=\"color:#e6db74;\">\"&lt;guid&gt;\"</span> <span style=\"color:#e6db74;\">'{print $2} '</span> | awk -F<span style=\"color:#e6db74;\">\"&lt;/guid&gt;\"</span> <span style=\"color:#e6db74;\">'{print $1}'</span><span style=\"color:#66d9ef;\">)</span>\n</span></span><span><span><span style=\"color:#66d9ef;\">for</span> i in $urls1\n</span></span><span><span>    <span style=\"color:#66d9ef;\">do</span>  archivenow --ia --is --mg <span style=\"color:#e6db74;\">\"</span>$i<span style=\"color:#e6db74;\">\"</span>\n</span></span><span><span><span style=\"color:#66d9ef;\">done</span>\n</span></span><span><span>\n</span></span><span><span><span style=\"color:#75715e;\"># Same like previous but for the IndieWeb RSS</span>\n</span></span><span><span>urls2<span style=\"color:#f92672;\">=</span><span style=\"color:#66d9ef;\">$(</span>curl -s https://robbinespu.gitlab.io/indieweb/index.xml | grep <span style=\"color:#e6db74;\">\"&lt;link&gt;\"</span> | head -n <span style=\"color:#ae81ff;\">10</span> | awk -F<span style=\"color:#e6db74;\">\"&lt;guid&gt;\"</span> <span style=\"color:#e6db74;\">'{print $2} '</span> | awk -F<span style=\"color:#e6db74;\">\"&lt;/guid&gt;\"</span> <span style=\"color:#e6db74;\">'{print $1}'</span><span style=\"color:#66d9ef;\">)</span>\n</span></span><span><span><span style=\"color:#66d9ef;\">for</span> i in $urls2\n</span></span><span><span>    <span style=\"color:#66d9ef;\">do</span>  archivenow --ia --is --mg <span style=\"color:#e6db74;\">\"</span>$i<span style=\"color:#e6db74;\">\"</span>\n</span></span><span><span><span style=\"color:#66d9ef;\">done</span>\n</span></span><span><span>\n</span></span><span><span><span style=\"color:#75715e;\"># Archive the main website</span>\n</span></span><span><span>archivenow --ia --is --mg <span style=\"color:#e6db74;\">\"https://robbinespu.gitlab.io/\"</span>\n</span></span><span><span>echo <span style=\"color:#e6db74;\">\"Done!\"</span>\n</span></span></code></pre><p>But I have turn off / comment out the script since a year ago because I don’t want to archive my website too often (because I added a webhook to execute CI/CD when received\n<a href=\"https://github.com/aaronpk/webmention.io/blob/45a06629e59d56efdba1ce39936e61b81fc92d97/views/webhooks.erb\">payload from webmention</a>\n).</p><p>Plus this tricks only work for existing old post, the new post not being archived yet because pipeline still running and it the “artifacts” still un-publish.</p><p>I only want to archive it when I have a new post. So, I will archive it manually 😊</p>",
      "text": "Previously, I always send my URL to the Wayback Machine to archive it. But now, I have a better way to do it. I use the\nGitlab CI/CD\nservice to send my URL to the Wayback Machine. It is a free service and it is very easy to use. I just need to add a few lines of code to my Hugo build script.Here is an example:First, I need to add some python script called\narchivenow\nduring build stage.pages:\n  stage: deploy\n  script:\n    - hugo --verbose --minify --enableGitInfo\n    - git clone git@github.com:oduwsdl/archivenow.git\n    - cd archivenow\n    - pip install -r requirements.txt\n    - pip install ./\n    - cd ..\n    - ./submit10url2backway.sh\n    - echo 'Build is complete and feed submited to web archieved..!!!'\nThen, I need to add “submit10url2backway” script to send my URL to the Wayback Machine. Here is the script:#!/usr/bin/env bash\n# Copyright Robbi Nespu <contact@robbi.my> , 2022\n# License: MIT\n\n# This script is used to archive my website to the Internet Archive.\n\n# Fetch RSS and read the first 10 URLs send send it to the Wayback Machine\nurls1=$(curl -s https://robbinespu.gitlab.io/index.xml | grep \"<link>\" | head -n 10 | awk -F\"<guid>\" '{print $2} ' | awk -F\"</guid>\" '{print $1}')\nfor i in $urls1\n    do  archivenow --ia --is --mg \"$i\"\ndone\n\n# Same like previous but for the IndieWeb RSS\nurls2=$(curl -s https://robbinespu.gitlab.io/indieweb/index.xml | grep \"<link>\" | head -n 10 | awk -F\"<guid>\" '{print $2} ' | awk -F\"</guid>\" '{print $1}')\nfor i in $urls2\n    do  archivenow --ia --is --mg \"$i\"\ndone\n\n# Archive the main website\narchivenow --ia --is --mg \"https://robbinespu.gitlab.io/\"\necho \"Done!\"\nBut I have turn off / comment out the script since a year ago because I don’t want to archive my website too often (because I added a webhook to execute CI/CD when received\npayload from webmention\n).Plus this tricks only work for existing old post, the new post not being archived yet because pipeline still running and it the “artifacts” still un-publish.I only want to archive it when I have a new post. So, I will archive it manually 😊"
    },
    "in_reply_to": "https://petersmith.org/webmentions/likes/2022/like-202220221213-124654/",
    "name": "↩️ Reply to: https://petersmith.org/webmentions/likes/2022/like-202220221213-124654/",
    "published": "2022-12-18T19:16:47",
    "rels": {
      "canonical": "https://journal.robbi.my/notes/221218071647/"
    },
    "type": "entry",
    "url": "https://journal.robbi.my/notes/221218071647/",
    "wm_id": 1583386,
    "wm_private": false,
    "wm_property": "in-reply-to",
    "wm_received": "2022-12-18T18:21:41Z",
    "wm_source": "https://journal.robbi.my/notes/221218071647/",
    "wm_target": "https://petersmith.org/webmentions/likes/2022/like-202220221213-124654/"
  },
  {
    "timestamp": "2022-12-18T19:50:27Z"
  }
]
